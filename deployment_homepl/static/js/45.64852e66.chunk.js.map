{"version":3,"file":"static/js/45.64852e66.chunk.js","mappings":"mJAGA,MAAMA,EAAeC,4BAGfC,EAAMC,EAAAA,EAAMC,OAAO,CACvBC,QAASL,EACTM,QAAS,CACP,eAAgB,sBAKpBJ,EAAIK,aAAaC,QAAQC,KACtBC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACFD,EAAOJ,QAAQQ,cAAa,UAAAC,OAAaJ,IAEpCD,CAAM,IAEdM,GACQC,QAAQC,OAAOF,KAK1Bd,EAAIK,aAAaY,SAASV,KACvBU,GAAaA,IACbH,IAAW,IAADI,EAQT,OAN+B,OAAb,QAAdA,EAAAJ,EAAMG,gBAAQ,IAAAC,OAAA,EAAdA,EAAgBC,SAAmBC,OAAOC,SAASC,SAASC,SAAS,YAEvEb,aAAac,WAAW,SACxBd,aAAac,WAAW,QACxBJ,OAAOC,SAASI,KAAO,UAElBV,QAAQC,OAAOF,EAAM,IAKzB,MAAMY,EACJC,MAAOC,EAAUC,KACtB,IAEE,aADuB7B,EAAI8B,KAAK,aAAc,CAAEF,WAAUC,cAC1CE,IAClB,CAAE,MAAOjB,GAEP,MAAMA,CACR,GAKEkB,EAAW,IAAIC,IAGfC,EAAiBC,IACrB,MAAMC,EAASJ,EAASK,IAAIF,GAC5B,OAAIC,GAAUE,KAAKC,MAAQH,EAAOI,UAJb,IAKZJ,EAAOL,KAET,IAAI,EAGPU,EAAgBA,CAACN,EAAKJ,KAC1BC,EAASU,IAAIP,EAAK,CAChBJ,OACAS,UAAWF,KAAKC,OAChB,EAISI,EACHhB,UACN,MAAMiB,EAAW,gBACXR,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,kBAE/B,OADAI,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EARXY,EAWHhB,UACN,MAAMV,QAAiBjB,EAAI8B,KAAK,iBAAkBe,GAGlD,OADAb,EAASc,OAAO,iBACT7B,EAASc,IAAI,EAfXY,EAkBHhB,MAAOoB,EAAIF,KACjB,MAAM5B,QAAiBjB,EAAIgD,IAAI,qBAADnC,OAAsBkC,GAAMF,GAG1D,OADAb,EAASc,OAAO,iBACT7B,EAASc,IAAI,EAtBXY,EAyBHhB,UACN,MAAMV,QAAiBjB,EAAI8C,OAAO,qBAADjC,OAAsBkC,IAGvD,OADAf,EAASc,OAAO,iBACT7B,EAASc,IAAI,EAKXkB,EACHtB,UACN,MAAMiB,EAAW,YACXR,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,cAE/B,OADAI,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EARXkB,EAWHtB,UACN,MAAMV,QAAiBjB,EAAI8B,KAAK,aAAcoB,GAE9C,OADAlB,EAASc,OAAO,aACT7B,EAASc,IAAI,EAdXkB,EAiBHtB,MAAOoB,EAAIG,KACjB,MAAMjC,QAAiBjB,EAAIgD,IAAI,iBAADnC,OAAkBkC,GAAMG,GAEtD,OADAlB,EAASc,OAAO,aACT7B,EAASc,IAAI,EApBXkB,EAuBHtB,UACN,MAAMV,QAAiBjB,EAAI8C,OAAO,iBAADjC,OAAkBkC,IAEnD,OADAf,EAASc,OAAO,aACT7B,EAASc,IAAI,EAKXoB,EACHxB,UACN,MAAMiB,EAAW,gBACXR,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,kBAE/B,OADAI,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EARXoB,EAWHxB,UACN,MAAMV,QAAiBjB,EAAI8B,KAAK,iBAAkBsB,GAElD,OADApB,EAASc,OAAO,iBACT7B,EAASc,IAAI,EAdXoB,EAiBHxB,MAAOoB,EAAIK,KACjB,MAAMnC,QAAiBjB,EAAIgD,IAAI,qBAADnC,OAAsBkC,GAAMK,GAE1D,OADApB,EAASc,OAAO,iBACT7B,EAASc,IAAI,EApBXoB,EAuBHxB,UACN,MAAMV,QAAiBjB,EAAI8C,OAAO,qBAADjC,OAAsBkC,IAEvD,OADAf,EAASc,OAAO,iBACT7B,EAASc,IAAI,EA1BXoB,EA6BCxB,gBACa3B,EAAIqC,IAAI,gCAADxB,OAAiCkC,KAC/ChB,KA/BPoB,EAkCIxB,MAAOoB,EAAIM,KACxB,IACEC,QAAQC,IAAI,gCAAiCF,EAAc,MAAON,GAClEO,QAAQC,IAAI,WAAYzD,GAExB,MAAMmB,QAAiBjB,EAAIqC,IAAI,gCAADxB,OAAiCkC,EAAE,eAAe,CAC9ES,aAAc,SAGhBF,QAAQC,IAAI,qBAAsBtC,EAASE,QAG3C,MAAMsC,EAAO,IAAIC,KAAK,CAACzC,EAASc,MAAO,CAAE4B,KAAM,oBACzCC,EAAMxC,OAAOyC,IAAIC,gBAAgBL,GACjCM,EAAOC,SAASC,cAAc,KACpCF,EAAKtC,KAAOmC,EACZ,MAAMM,EAAWb,EAAac,QAAQ,gBAAiB,KASvD,OARAJ,EAAKK,SAAQ,WAAAvD,OAAcqD,EAAQ,QACnCH,EAAKM,MAAMC,QAAU,OACrBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAKU,QACLT,SAASO,KAAKG,YAAYX,GAC1B3C,OAAOyC,IAAIc,gBAAgBf,GAE3BN,QAAQC,IAAI,uCACLtC,EAASc,IAClB,CAAE,MAAOjB,GAEP,MADAwC,QAAQxC,MAAM,yBAA0BA,GAClCA,CACR,GAKS8D,EACHjD,UACN,MAAMiB,EAAW,mBACXR,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,qBAE/B,OADAI,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EARX6C,EAWHjD,UACN,MAAMV,QAAiBjB,EAAI8B,KAAK,oBAAqB+C,GAErD,OADA7C,EAASc,OAAO,oBACT7B,EAASc,IAAI,EAdX6C,EAiBHjD,MAAOoB,EAAI8B,KACjB,MAAM5D,QAAiBjB,EAAIgD,IAAI,wBAADnC,OAAyBkC,GAAM8B,GAE7D,OADA7C,EAASc,OAAO,oBACT7B,EAASc,IAAI,EApBX6C,EAuBHjD,UACN,MAAMV,QAAiBjB,EAAI8C,OAAO,wBAADjC,OAAyBkC,IAE1D,OADAf,EAASc,OAAO,oBACT7B,EAASc,IAAI,EAKX+C,EACCnD,MAAOoD,EAAOC,KACxB,MAAMpC,EAAQ,oBAAA/B,OAAuBkE,EAAK,KAAAlE,OAAImE,GACxC5C,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAM6C,EAAS,IAAIC,gBACfH,GAAOE,EAAOE,OAAO,QAASJ,GAC9BC,GAAMC,EAAOE,OAAO,OAAQH,GAEhC,MAAM/D,QAAiBjB,EAAIqC,IAAI,yBAADxB,OAA0BoE,IAExD,OADAxC,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EAZX+C,EAeQnD,UACjB,MAAMiB,EAAQ,mBAAA/B,OAAsBuE,GAC9BhD,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,oCAADxB,OAAqCuE,IAEnE,OADA3C,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EAtBX+C,EAyBMnD,MAAOyD,EAAYC,KAClC,MAAMzC,EAAQ,iBAAA/B,OAAoBuE,EAAU,KAAAvE,OAAIwE,GAC1CjD,EAASF,EAAcU,GAC7B,GAAIR,EAAQ,OAAOA,EAEnB,MAAMnB,QAAiBjB,EAAIqC,IAAI,kCAADxB,OAAmCuE,EAAU,gBAAAvE,OAAewE,IAE1F,OADA5C,EAAcG,EAAU3B,EAASc,MAC1Bd,EAASc,IAAI,EAKXuD,EACE3D,MAAO4D,EAAQC,KAC1B,MAAMvE,QAAiBjB,EAAI8B,KAAK,eAAgB,CAAE2D,QAASF,EAAQG,QAASF,IAG5E,OADAxD,EAASc,OAAO,oBACT7B,EAASc,IAAI,E,aClLxB,QApGA,SAAkB4D,GAAe,IAAd,QAAEC,GAASD,EAC5B,MAAO/D,EAAUiE,IAAeC,EAAAA,EAAAA,UAAS,KAClCjE,EAAUkE,IAAeD,EAAAA,EAAAA,UAAS,KAClCE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAChChF,EAAOoF,IAAYJ,EAAAA,EAAAA,UAAS,IAuBnC,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mGAAkGC,SAAA,EAE/GC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,MAAA,UACEI,QAASA,IAAMnF,OAAOC,SAASI,KAAO,IACtC2E,UAAU,sJAAqJC,SAAA,EAE/JC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+DAA8DC,UAC3EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAwBI,KAAK,eAAeC,QAAQ,YAAWJ,UAC5EC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,iBAG7JN,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAC,yBAIxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,sBAGtDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,mBAG9BvF,IACCwF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uEAAsEC,SAClFvF,KAILqF,EAAAA,EAAAA,MAAA,QAAMU,SApDSlF,UACnBmF,EAAEC,iBACFd,GAAW,GACXC,EAAS,IAET,IACE,MAAMc,QAAetF,EAAcE,EAAUC,GAEzCmF,EAAOC,cAAgBD,EAAO9D,KAChC0C,EAAQoB,EAAO9D,KAAM8D,EAAOC,cAE5Bf,EAAS,kCAEb,CAAE,MAAOpF,GACPwC,QAAQxC,MAAM,eAAgBA,GAC9BoF,EAAS,kCACX,CAEAD,GAAW,EAAM,EAkCiBG,UAAU,YAAWC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,WAAWd,UAAU,+CAA8CC,SAAC,4BAGnFC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,OACLZ,GAAG,WACHoE,MAAOvF,EACPwF,SAAWN,GAAMjB,EAAYiB,EAAEO,OAAOF,OACtCf,UAAU,kIACVkB,UAAQ,QAIZnB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,WAAWd,UAAU,+CAA8CC,SAAC,gBAGnFC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,WACLZ,GAAG,WACHoE,MAAOtF,EACPuF,SAAWN,GAAMf,EAAYe,EAAEO,OAAOF,OACtCf,UAAU,kIACVkB,UAAQ,QAIZhB,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACL4D,SAAUvB,EACVI,UAAU,uNAAsNC,SAE/NL,EAAU,eAAiB,6BAMxC,E,aC2NA,QA7TA,SAAkBL,GAAiC,IAAhC,OAAE6B,EAAM,QAAExB,EAAO,SAAEuB,GAAU5B,EAC9C,MAAO8B,EAAYC,IAAiB5B,EAAAA,EAAAA,WAAS,IACtChF,EAAOoF,IAAYJ,EAAAA,EAAAA,UAAS,OAC5B6B,EAAYC,IAAiB9B,EAAAA,EAAAA,UAAS,gBACtC+B,EAAcC,IAAmBhC,EAAAA,EAAAA,WAAS,IAC1CiC,EAAeC,IAAoBlC,EAAAA,EAAAA,UAAS,IAC5CmC,EAAiBC,IAAsBpC,EAAAA,EAAAA,UAAS,OAChDqC,EAAcC,IAAmBtC,EAAAA,EAAAA,UAAS,IAC1CuC,EAAkBC,IAAuBxC,EAAAA,EAAAA,WAAS,GACnDyC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAeD,EAAAA,EAAAA,QAAO,MACtBE,GAAsBF,EAAAA,EAAAA,QAAO,MAC7BG,GAAkBH,EAAAA,EAAAA,SAAO,GACzBI,GAAqBJ,EAAAA,EAAAA,QAAO,OAElCK,EAAAA,EAAAA,YAAU,KAEJR,IAAqBd,GACvBuB,IAGK,KACLC,IACIL,EAAoBM,SACtBC,cAAcP,EAAoBM,QACpC,IAED,KAGHH,EAAAA,EAAAA,YAAU,KACRF,EAAgBK,QAAUnB,CAAY,GACrC,CAACA,KAEJgB,EAAAA,EAAAA,YAAU,KACRD,EAAmBI,QAAUf,CAAe,GAC3C,CAACA,IAEJ,MAoCMa,EAAgBnH,UACpB,IACEuE,EAAS,MACTwB,GAAc,GAEVe,EAAaO,SACfP,EAAaO,QAAQE,UAGvB,MAAMC,EAAY,IAAIC,EAAAA,EACpBb,EAASS,SACRhC,IACC,GAAIA,GAAUA,EAAOjF,KAAM,CACzB,MAAMsH,EAAc/G,KAAKC,MAKzB,GAHAe,QAAQC,IAAI,oBAAqByD,EAAOjF,MAGpCsH,EAAclB,EAAe,IAE/B,YADA7E,QAAQC,IAAI,mCAKd,GAAIqF,EAAmBI,UAAYhC,EAAOjF,MAAQ4G,EAAgBK,QAEhE,YADA1F,QAAQC,IAAI,mDAKd,GAAIoF,EAAgBK,SAAWhD,EAE7B,YADA1C,QAAQC,IAAI,4CAId6E,EAAgBiB,GAChBnB,EAAmBlB,EAAOjF,MAC1B6G,EAAmBI,QAAUhC,EAAOjF,KAGpCyF,EAAOR,EAAOjF,MA1ElB0G,EAAaO,SACfP,EAAaO,QAAQM,OAGvBtB,EAAiB,GACjBF,GAAgB,GAChBa,EAAgBK,SAAU,EAEtBN,EAAoBM,SACtBC,cAAcP,EAAoBM,SAGpCN,EAAoBM,QAAUO,aAAY,KACxCvB,GAAiBwB,GACXA,GAAQ,GACVP,cAAcP,EAAoBM,SAClClB,GAAgB,GAChBa,EAAgBK,SAAU,EAC1Bd,EAAmB,MACnBU,EAAmBI,QAAU,KAGzBX,IAAqBd,GACvBkC,YAAW,KACTX,GAAe,GACd,KAEE,GAEFU,EAAO,GACd,GACD,IA+CG,IAEF,CACEE,cAAgBC,MAIhBC,gBAAiBjC,EACjBkC,qBAAqB,EACrBC,sBAAsB,EACtBC,0BAA0B,EAC1BC,kBAAmB,IAIvBvB,EAAaO,QAAUG,QACjBA,EAAUc,OAElB,CAAE,MAAON,GACPrG,QAAQxC,MAAM,6BAA8B6I,GAC5CzD,EAAS,iFACTwB,GAAc,EAChB,GAGIqB,EAAeA,KACfN,EAAaO,UACfP,EAAaO,QAAQE,UACrBT,EAAaO,QAAU,MAEzBtB,GAAc,GACVgB,EAAoBM,UACtBC,cAAcP,EAAoBM,SAClChB,EAAiB,GACjBF,GAAgB,GAChBa,EAAgBK,SAAU,GAE5Bd,EAAmB,MACnBU,EAAmBI,QAAU,IAAI,EA0CnC,OANAH,EAAAA,EAAAA,YAAU,KACJpB,IAAeI,GAAgBF,GACjCmB,GACF,GACC,CAACnB,KAGFxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAClCvF,IACCqF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uEAAsEC,SAAA,CAClFvF,GACDwF,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAML,EAAS,MACxBE,UAAU,uCAAsCC,SACjD,cAOJ0B,EAAgB,IACfzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gFAA+EC,UAC5FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAeI,KAAK,eAAeC,QAAQ,YAAWJ,UACnEC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,eAE3JT,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,CAAC,qEACkC0B,EAAc,mBAMpF5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACE4D,IAAK3B,EACLnC,UAAU,uDACV/B,MAAO,CAAEC,QAAUmD,GAAcI,EAAgB,QAAU,WAG3DJ,IAAeI,IACfvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sEAAqEC,UAClFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uCAAuCI,KAAK,eAAeC,QAAQ,YAAWJ,UAC3FC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,6FAA6FC,SAAS,eAEnIN,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,kCAMjCL,GAAW6B,KACXvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2EAA0EC,UACvFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uGACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAC/BwB,EAAY,gCAAAhH,OAAmCkH,EAAa,KAAM,2BAOzEN,GAAcI,KAAkB7B,IAChCG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0EACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2EACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8EAGfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uEAMvBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,UACEC,QAhGgB4D,KAClBtC,IAIAJ,GACFsB,IACAT,GAAoB,KAEpBA,GAAoB,GACpBQ,KACF,EAsFMvB,SAAUA,GAAYM,EACtBzB,UAAS,6DAAAvF,OACP4G,EACI,yCACA,2CAA0C,oDACGpB,SAElDwB,EAAY,gCAAAhH,OAAmCkH,EAAa,KAAON,EAAa,YAAc,mBAGhGA,IACCnB,EAAAA,EAAAA,KAAA,UACEC,QAhIW5E,UACnB,GAAIkG,EAEF,YADA3B,EAAS,yEAIX,MAAMkE,EAA+B,gBAAfzC,EAA+B,OAAS,cAG9D,GAFAC,EAAcwC,GAEV3B,EAAaO,QACf,UACQP,EAAaO,QAAQqB,UAAUD,EACvC,CAAE,MAAOT,GACPrG,QAAQxC,MAAM,0BAA2B6I,GACzCzD,EAAS,kDACX,CACF,EAiHQqB,SAAUA,GAAYM,EACtBzB,UAAU,gHACVkE,MAAM,iCAAiBjE,SACxB,qBAMLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,kBAA0B,gBAAfsB,EAA+B,QAAU,eACvDrB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wEACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6DACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oFACFwB,IACC1B,EAAAA,EAAAA,MAAA,KAAGC,UAAU,8BAA6BC,SAAA,CAAC,6BACxB0B,EAAc,wCAGjCN,IAAeI,IACf1B,EAAAA,EAAAA,MAAA,KAAGC,UAAU,4BAA2BC,SAAA,CAAC,kDACNgC,EAAmB,qBAAa,8BAM7E,ECrGA,QArNA,SAAsB1C,GAAsB,IAArB,KAAEzC,EAAI,SAAEqH,GAAU5E,EACvC,MAAO6E,EAAYC,IAAiB3E,EAAAA,EAAAA,UAAS,OACtCE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAChC4E,EAAaC,IAAkB7E,EAAAA,EAAAA,UAAS,OAE/C+C,EAAAA,EAAAA,YAAU,KACR+B,GAAkB,GACjB,IAEH,MAAMA,EAAmBjJ,UACvB,IAEMuB,EAAK2H,YAAc3H,EAAK4H,cAC1BH,EAAe,CAAE5H,GAAIG,EAAK2H,WAAYE,KAAM7H,EAAK4H,cAErD,CAAE,MAAOhK,GACPwC,QAAQxC,MAAM,iDAAwCA,EACxD,GA2CF,OACEqF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,eACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQnD,EAAKtB,YACf8I,IACCpE,EAAAA,EAAAA,KAAA,KAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gGAA+FC,SAAA,CAAC,gBAC1GqE,EAAYK,iBAM1BzE,EAAAA,EAAAA,KAAA,UACEC,QAASgE,EACTnE,UAAU,sDAAqDC,SAChE,oBAQPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,CAExCqE,IACCvE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,EACtEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAC,uCAG1DF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,mCAAkCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,wBAAeC,EAAAA,EAAAA,KAAA,UAAAD,SAASqE,EAAYK,iBAM9C5E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EACpEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,4BAGzDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kCAAiCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kGACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0GAKRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,mBAGzDC,EAAAA,EAAAA,KAAC0E,EAAS,CACRxD,OA5GW7F,UACnBsE,GAAW,GACXwE,EAAc,MAEd,IAEE,MAAMzD,QAAe1B,EAAsB2F,EAAQ/H,EAAKH,IAEpDiE,EAAOkE,QACTT,EAAc,CACZS,SAAS,EACTC,OAAQnE,EAAOmE,OACf/H,SAAU4D,EAAOoE,cACjBC,KAAMrE,EAAOqE,KACbC,QAAStE,EAAOsE,QAChBC,iBAAkBvE,EAAOuE,mBAG3Bd,EAAc,CACZS,SAAS,EACTI,QAAStE,EAAOsE,QAChBE,gBAAgB,GAItB,CAAE,MAAO1K,GACPwC,QAAQxC,MAAM,4BAA6BA,GAC3C2J,EAAc,CACZS,SAAS,EACTI,QAAS,kDAEb,CAEArF,GAAW,EAAM,EA4ETD,QAASA,EACTuB,SAAUvB,OAKbwE,IACClE,EAAAA,EAAAA,KAAA,OAAKF,UAAS,uBAAAvF,OACZ2J,EAAWU,QACP,sCACAV,EAAWiB,WACX,yCACAjB,EAAWgB,eACX,oCAEHnF,UACDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SACpBmE,EAAWU,SACV/E,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA8BI,KAAK,eAAeC,QAAQ,YAAWJ,UAClFC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,wIAAwIC,SAAS,eAE9KN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAC3B,aAAtBmE,EAAWW,OAAwB,6BAAqB,mCAG7DhF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAAmB,IAAEmE,EAAWpH,aAC3C+C,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEmE,EAAWa,SACtC/E,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAEmE,EAAWc,gBAGrCd,EAAWgB,gBACbrF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4BI,KAAK,eAAeC,QAAQ,YAAWJ,UAChFC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,oHAAoHC,SAAS,eAE1JN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAC,0BAErDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAEmE,EAAWc,WACxChF,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA2BC,SAAC,+EAG3CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4BI,KAAK,eAAeC,QAAQ,YAAWJ,UAChFC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,0NAA0NC,SAAS,eAEhQN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAC,uBAErDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAEmE,EAAWc,gBAI9ChF,EAAAA,EAAAA,KAAA,UACEC,QAnIMmF,KAClBjB,EAAc,KAAK,EAmIPrE,UAAU,yCAAwCC,UAElDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUI,KAAK,eAAeC,QAAQ,YAAWJ,UAC9DC,EAAAA,EAAAA,KAAA,QAAMI,SAAS,UAAUC,EAAE,qMAAqMC,SAAS,sBAQnPT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,WACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+EACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4CACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iDACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oEAMf,E,aC0sBA,QA95BA,SAAuBV,GAAsB,IAArB,KAAEzC,EAAI,SAAEqH,GAAU5E,EACxC,MAAOgG,EAAWC,IAAgB9F,EAAAA,EAAAA,UAAS,cACpC+F,EAAWC,IAAgBhG,EAAAA,EAAAA,UAAS,KACpCiG,EAAaC,IAAkBlG,EAAAA,EAAAA,UAAS,KACxC4E,EAAaC,IAAkB7E,EAAAA,EAAAA,UAAS,OACxCE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAChChF,EAAOoF,IAAYJ,EAAAA,EAAAA,UAAS,KAG5BmG,EAAiBC,IAAsBpG,EAAAA,EAAAA,UAAS,KAChDqG,EAAyBC,IAA8BtG,EAAAA,EAAAA,UAAS,OAChEuG,EAAgBC,IAAqBxG,EAAAA,EAAAA,UAAS,KAC9CyG,EAAeC,IAAoB1G,EAAAA,EAAAA,UAAS,OAC5C2G,EAAcC,IAAmB5G,EAAAA,EAAAA,UAAS,KAC1C6G,EAAaC,IAAkB9G,EAAAA,EAAAA,UAAS,SAGxC+G,EAAaC,IAAkBhH,EAAAA,EAAAA,WAAS,IACxCiH,EAAkBC,IAAuBlH,EAAAA,EAAAA,UAAS,OAClDmH,EAAYC,IAAiBpH,EAAAA,EAAAA,UAAS,OAGtCqH,EAAmBC,IAAwBtH,EAAAA,EAAAA,WAAS,IACpDuH,EAAiBC,IAAsBxH,EAAAA,EAAAA,UAAS,OAChDyH,EAAcC,KAAmB1H,EAAAA,EAAAA,UAAS,CAC/CiF,KAAM,GACN0C,WAAW,KAINC,GAAoBC,KAAyB7H,EAAAA,EAAAA,WAAS,IACtD8H,GAAkBC,KAAuB/H,EAAAA,EAAAA,UAAS,OAClDgI,GAAeC,KAAoBjI,EAAAA,EAAAA,UAAS,CACjDkI,YAAa,GACbC,SAAU,GACVC,UAAW,MAGbrF,EAAAA,EAAAA,YAAU,KACRsF,IAAU,GACT,IAEH,MAAMA,GAAWxM,UACf,IACEsE,GAAW,GACXC,EAAS,IAGLhD,EAAK2H,YAAc3H,EAAK4H,cAC1BH,EAAe,CAAE5H,GAAIG,EAAK2H,WAAYE,KAAM7H,EAAK4H,eAInD,MAAOsD,EAAeC,SAAyBtN,QAAQuN,IAAI,CACzDnL,IACAyB,MAGFkH,EAAasC,GACbpC,EAAeqC,EAEjB,CAAE,MAAOvN,GACPwC,QAAQxC,MAAM,sBAAuBA,GACrCoF,EAAS,+CACX,CAAC,QACCD,GAAW,EACb,GAyMIsI,GAAmBnJ,IACvB,MAAMhC,EAAWyI,EAAU2C,MAAK1H,GAAKA,EAAE/D,KAAOqC,IAC9C,OAAOhC,EAAWA,EAAS2H,KAAO,UAAU,EAG9C,OAAI/E,GAEAM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,UACxEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAC,yBAM7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,0BACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQnD,EAAKtB,YACf8I,IACCpE,EAAAA,EAAAA,KAAA,KAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gGAA+FC,SAAA,CAAC,gBAC1GqE,EAAYK,iBAM1BzE,EAAAA,EAAAA,KAAA,UACEC,QAASgE,EACTnE,UAAU,sDAAqDC,SAChE,mBAQNvF,IACCwF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kEAAiEC,SAC7EvF,OAMPwF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMqF,EAAa,aAC5BxF,UAAS,4CAAAvF,OACO,cAAd8K,EACI,gCACA,wDACHtF,SACJ,gBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMqF,EAAa,WAC5BxF,UAAS,4CAAAvF,OACO,YAAd8K,EACI,gCACA,wDACHtF,SACJ,mBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,KACPqF,EAAa,WACK,YAAdD,IACFiB,EAAe,QApRHjL,OAAOoD,EAAOC,KACxC,IACEiB,GAAW,GACXC,EAAS,IACT,MAAMuI,QAAoB3J,EAA8BC,EAAOC,GAC/DkH,EAAmBuC,EACrB,CAAE,MAAO3N,GACPwC,QAAQxC,MAAM,kCAAmCA,GACjDoF,EAAS,oEACX,CAAC,QACCD,GAAW,EACb,GA0QcyI,GACF,EAEFtI,UAAS,4CAAAvF,OACO,YAAd8K,EACI,gCACA,wDACHtF,SACJ,wCAQPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,CAC3B,cAAdsF,IACCrF,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,0BACpDC,EAAAA,EAAAA,KAAA,UACEC,QAnNUoI,KACxBrB,EAAmB,MACnBE,GAAgB,CACdzC,KAAM,GACN0C,WAAW,IAEbL,GAAqB,EAAK,EA8MZhH,UAAU,kFAAiFC,SAC5F,yBAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,0BAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,YAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,YAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDwF,EAAU+C,KAAKxL,IACd+C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/CjD,EAAS2H,UAGdzE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SACnCjD,EAASqC,aAGda,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,4DAAAvF,OACbuC,EAASqK,UACL,8BACA,2BACHpH,SACAjD,EAASqK,UAAY,UAAY,kBAGtCtH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kDAAiDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IA1PPnD,KAC1BkK,EAAmBlK,GACnBoK,GAAgB,CACdzC,KAAM3H,EAAS2H,KACf0C,UAAWrK,EAASqK,YAEtBL,GAAqB,EAAK,EAoPayB,CAAmBzL,GAClCgD,UAAU,yCAAwCC,SACnD,YAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAjSZ5E,WACrB,IACEuE,EAAS,IACT,MAAM+E,QAAe9H,EAAwBC,EAASL,IACtDiK,EAAoB5J,GACpB8J,EAAcjC,GACd6B,GAAe,EACjB,CAAE,MAAOhM,GACPwC,QAAQxC,MAAM,4BAA6BA,GAC3CoF,EAAS,6CACX,GAuRuC4I,CAAe1L,GAC9BgD,UAAU,2CAA0CC,SACrD,gBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IA1Rb5E,WACpB,IACEuE,EAAS,UACH/C,EAA2BC,EAASL,GAAIK,EAAS2H,KACzD,CAAE,MAAOjK,GACPwC,QAAQxC,MAAM,4BAA6BA,GAC3CoF,EAAS,mDACX,GAmRuC6I,CAAc3L,GAC7BgD,UAAU,6CAA4CC,SACvD,iBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAnQN5E,WAC3B,GAAIP,OAAO4N,QAAQ,yDACjB,UACQ7L,EAAoBiC,SACpB+I,IACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,2BAA4BA,GAC1CoF,EAAS,6CACX,CACF,EA0PuC+I,CAAqB7L,EAASL,IAC7CqD,UAAU,kCAAiCC,SAC5C,mBA1CIjD,EAASL,kBAuDjB,YAAd4I,IACCrF,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,yBACpDC,EAAAA,EAAAA,KAAA,UACEC,QA5OW2I,KACzBrB,GAAoB,MACpBE,GAAiB,CACfC,YAAa,GACbC,SAAU,GACVC,UAAW,KAEbP,IAAsB,EAAK,EAsObvH,UAAU,kFAAiFC,SAC5F,mBAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,0BAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,UAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,oBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,kBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,mBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjD0F,EAAY6C,KAAKO,IAChBhJ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/CkI,GAAgBY,EAAOnB,kBAG5B1H,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9D,IAAI/D,KAAK6M,EAAOC,MAAMC,mBAAmB,YAE5C/I,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9D,IAAI/D,KAAK6M,EAAOlB,UAAUqB,mBAAmB,QAAS,CACrDC,KAAM,UACNC,OAAQ,eAGZlJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9D8I,EAAOjB,UAAY,IAAI5L,KAAK6M,EAAOjB,WAAWoB,mBAAmB,QAAS,CACzEC,KAAM,UACNC,OAAQ,YACL,OAEPrJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oDAAmDC,SAAA,CAC9D8I,EAAOM,aAAe,EAAE,QAE3BtJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kDAAiDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,KAAMmJ,OA/SvC7B,GAD2BhJ,EAgTgCsK,GA9S3DpB,GAAiB,CACfC,YAAanJ,EAAUmJ,YACvBC,SAAUpJ,EAAUoJ,SAAW,IAAI3L,KAAKuC,EAAUoJ,UAAU0B,cAAcC,MAAM,EAAG,IAAM,GACzF1B,UAAWrJ,EAAUqJ,UAAY,IAAI5L,KAAKuC,EAAUqJ,WAAWyB,cAAcC,MAAM,EAAG,IAAM,UAE9FjC,IAAsB,GAPK9I,KAgTwC,EAC3CuB,UAAU,yCAAwCC,SACnD,YAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IA3QL5E,WAC5B,GAAIP,OAAO4N,QAAQ,wDACjB,UACQpK,EAAsBiL,SACtB1B,IACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,6BAA8BA,GAC5CoF,EAAS,8CACX,CACF,EAkQuC4J,CAAsBX,EAAOpM,IAC5CqD,UAAU,kCAAiCC,SAC5C,mBAlCI8I,EAAOpM,kBA+Cf,YAAd4I,IACCxF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACmB,SAAhBsG,IACCxG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sCAAqCC,SAAA,CAAC,kCACtB,IAAI/D,MAAO+M,mBAAmB,QAAS,CAAEtK,MAAO,OAAQC,KAAM,gBAE5FsB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,iFAI5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,0BAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,mCAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjD4F,EAAgB2C,KAAKxL,IACpB+C,EAAAA,EAAAA,MAAA,MAA+BC,UAAU,mBAAkBC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/CjD,EAASgI,mBAGd9E,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,CACjDjD,EAASqM,YAAYM,QAAQ,GAAG,UAGrCzJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kDAAiDC,UAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IA9eT5E,WAC1B,IACEyK,EAA2BhJ,GAC3B6C,GAAW,GACXC,EAAS,IAET,MAAM8J,QAAmBlL,EAAqC1B,EAAS4K,aACvE1B,EAAkB0D,GAClBpD,EAAe,SACjB,CAAE,MAAO9L,GACPwC,QAAQxC,MAAM,iCAAkCA,GAChDoF,EAAS,iEACX,CAAC,QACCD,GAAW,EACb,GAgeyCgK,CAAoB7M,GACnCgD,UAAU,oCAAmCC,SAC9C,6BAfIjD,EAAS4K,oBAuBI,IAA3B/B,EAAgBiE,SACf5J,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAAC,qCAQvC,WAAhBsG,GAA4BR,IAC3BhG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sCAAqCC,SAAA,CAAC,yBAChC8F,EAAwBf,kBAE5C9E,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,yEAI5CC,EAAAA,EAAAA,KAAA,UACEC,QAzeQ4J,KAC1BvD,EAAe,QACfR,EAA2B,MAC3BE,EAAkB,IAClBE,EAAiB,MACjBE,EAAgB,GAAG,EAqeDtG,UAAU,wDAAuDC,SAClE,2CAKLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,kBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,mBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,eAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDgG,EAAeuC,KAAK7J,IACnBoB,EAAAA,EAAAA,MAAA,MAAsBC,UAAU,mBAAkBC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/C,IAAI/D,KAAKyC,EAAMA,MAAQ,OAAOsK,mBAAmB,QAAS,CAAEtK,MAAO,OAAQC,KAAM,iBAGtFsB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,CACjDtB,EAAM0K,YAAYM,QAAQ,GAAG,UAGlCzJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACnCtB,EAAMqL,YAAY,aAGvB9J,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kDAAiDC,UAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IA1iBZ5E,WACvB,IACE6K,EAAiBzH,GACjBkB,GAAW,GACXC,EAAS,IAET,MAAMmK,QAAiBvL,EACrBqH,EAAwB6B,YACxBjJ,EAAMA,OAER2H,EAAgB2D,GAChBzD,EAAe,OACjB,CAAE,MAAO9L,GACPwC,QAAQxC,MAAM,+BAAgCA,GAC9CoF,EAAS,uDACX,CAAC,QACCD,GAAW,EACb,GAyhByCqK,CAAiBvL,GAChCqB,UAAU,oCAAmCC,SAC9C,mBApBItB,EAAMA,cA4BM,IAA1BsH,EAAe6D,SACd5J,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAAC,8CAQvC,SAAhBsG,GAA0BR,GAA2BI,IACpDpG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sCAAqCC,SAAA,CAAC,eACrC8F,EAAwBf,kBAEvC9E,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SACtC,IAAI/D,KAAKiK,EAAcxH,MAAQ,OAAOsK,mBAAmB,QAAS,CAAEtK,MAAO,OAAQC,KAAM,kBAG9FsB,EAAAA,EAAAA,KAAA,UACEC,QA9iBOgK,KACzB3D,EAAe,UACfJ,EAAiB,MACjBE,EAAgB,GAAG,EA4iBDtG,UAAU,wDAAuDC,SAClE,4CAKLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,UAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,oBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,kBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,wBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjDoG,EAAamC,KAAK4B,IACjBrK,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/C,IAAI/D,KAAKkO,EAAIpB,MAAMC,mBAAmB,QAAS,CAC9CoB,QAAS,OACTzL,KAAM,UACND,MAAO,OACPyL,IAAK,iBAIXlK,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SACnCmK,EAAIvC,UAAY,SAGrB3H,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SACnCmK,EAAItC,WAAa,SAGtB5H,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sCAAqCC,SACjDmK,EAAIf,YAAce,EAAIf,YAAYM,QAAQ,GAAK,IAAM,UAvBnDS,EAAIpB,aA8BM,IAAxB3C,EAAayD,SACZ5J,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAAC,2CAY7DwG,GAAeE,GAAoBE,IAClC3G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,yCAAwCC,SAAA,CAAC,cACzC0G,EAAiBhC,SAE/BzE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OACEoK,IAAG,yBAAA7P,OAA2BoM,EAAW0D,eACzCC,IAAI,UACJxK,UAAU,iCAGdE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sBAAqBC,SAAE4G,EAAW4D,qBAE5DvK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMuG,GAAe,GAC9B1G,UAAU,mEAAkEC,SAC7E,qBAUVqH,KACCpH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SACnDuH,GAAgB,uBAAA/M,OACQ0N,GAAgBX,GAAiBI,cACxD,2BAGJ7H,EAAAA,EAAAA,MAAA,QAAMU,SAvjBYlF,UAC5BmF,EAAEC,iBACF,IACE,MAAM+J,EAAY,CAChB9C,YAAaF,GAAcE,YAC3BC,SAAUH,GAAcG,SAAW,IAAI3L,KAAKwL,GAAcG,UAAU0B,cAAgB,KACpFzB,UAAWJ,GAAcI,UAAY,IAAI5L,KAAKwL,GAAcI,WAAWyB,cAAgB,MAGrF/B,SACIhJ,EAAsBgJ,GAAiB7K,GAAI+N,SAE3ClM,EAAsBkM,GAG9BnD,IAAsB,SAChBQ,IACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,2BAA4BA,GAC1CoF,EAAS,iDACX,GAmiBgDG,SAAA,EAClCuH,KACAzH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,eAGhEF,EAAAA,EAAAA,MAAA,UACEgB,MAAO2G,GAAcE,YACrB5G,SAAWN,GAAMiH,IAAgBgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjD,IAAa,IAAEE,YAAalH,EAAEO,OAAOF,SAC5Ef,UAAU,yGACVkB,UAAQ,EAAAjB,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,GAAEd,SAAC,uBAChBwF,EAAU+C,KAAIxL,IACbkD,EAAAA,EAAAA,KAAA,UAA0Ba,MAAO/D,EAASL,GAAGsD,SAAEjD,EAAS2H,MAA3C3H,EAASL,YAK7B6K,KACCtH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+CAA8CC,SAAA,CAAC,SACvD,IAAI/D,KAAKsL,GAAiBwB,MAAMC,mBAAmB,eAIhElJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,oBAGhEC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,iBACLwD,MAAO2G,GAAcG,SACrB7G,SAAWN,GAAMiH,IAAgBgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjD,IAAa,IAAEG,SAAUnH,EAAEO,OAAOF,SACzEf,UAAU,yGACVkB,UAAQ,QAGZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,kBAGhEC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,iBACLwD,MAAO2G,GAAcI,UACrB9G,SAAWN,GAAMiH,IAAgBgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjD,IAAa,IAAEI,UAAWpH,EAAEO,OAAOF,SAC1Ef,UAAU,+GAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACL4C,QAASA,IAAMoH,IAAsB,GACrCvH,UAAU,mEAAkEC,SAC7E,YAGDC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACLyC,UAAU,gEAA+DC,SAExEuH,GAAmB,cAAgB,uBAUjDT,IACC7G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SACnDgH,EAAkB,oBAAsB,sBAE3ClH,EAAAA,EAAAA,MAAA,QAAMU,SA/qBWlF,UAC3BmF,EAAEC,iBACF,IACE,MAAMiK,GAAYD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbxD,GAAY,IACf1C,WAAY3H,EAAK2H,aAGfwC,QACIlK,EAAoBkK,EAAgBtK,GAAIiO,SAExC7N,EAAoB6N,GAG5B5D,GAAqB,SACfe,IACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,yBAA0BA,GACxCoF,EAAS,gDACX,GA4pB+CG,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,0BAGhEC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,OACLwD,MAAOoG,EAAaxC,KACpB3D,SAAWN,GAAM0G,IAAeuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,GAAY,IAAExC,KAAMjE,EAAEO,OAAOF,SACnEf,UAAU,yGACVkB,UAAQ,QAGZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,YAGhEF,EAAAA,EAAAA,MAAA,UACEgB,MAAOoG,EAAaE,UACpBrG,SAAWN,GAAM0G,IAAeuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,GAAY,IAAEE,UAA8B,SAAnB3G,EAAEO,OAAOF,SACxEf,UAAU,yGAAwGC,SAAA,EAElHC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,OAAMd,SAAC,aACrBC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,QAAOd,SAAC,sBAG1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACL4C,QAASA,IAAM6G,GAAqB,GACpChH,UAAU,mEAAkEC,SAC7E,YAGDC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACLyC,UAAU,gEAA+DC,SAExEgH,EAAkB,cAAgB,yBAUvD,ECzYA,QAnhBA,SAAuB1H,GAAsB,IAArB,KAAEzC,EAAI,SAAEqH,GAAU5E,EACxC,MAAOgG,EAAWC,IAAgB9F,EAAAA,EAAAA,UAAS,cACpCmL,EAAWC,IAAgBpL,EAAAA,EAAAA,UAAS,KACpCqL,EAAOC,IAAYtL,EAAAA,EAAAA,UAAS,KAC5BuL,EAAOC,IAAYxL,EAAAA,EAAAA,UAAS,CAAC,IAC7BE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAChChF,EAAOoF,IAAYJ,EAAAA,EAAAA,UAAS,KAG5ByL,EAAkBC,IAAuB1L,EAAAA,EAAAA,WAAS,IAClD2L,EAAgBC,IAAqB5L,EAAAA,EAAAA,UAAS,OAC9C6L,EAAaC,IAAkB9L,EAAAA,EAAAA,UAAS,CAAEiF,KAAM,MAGhD8G,EAAeC,IAAoBhM,EAAAA,EAAAA,WAAS,IAC5CiM,EAAaC,IAAkBlM,EAAAA,EAAAA,UAAS,OACxCmM,EAAUC,IAAepM,EAAAA,EAAAA,UAAS,CACvClE,SAAU,GACVC,SAAU,GACV8B,KAAM,OACNkH,WAAY,MAGdhC,EAAAA,EAAAA,YAAU,KACRsF,GAAU,GACT,IAEH,MAAMA,EAAWxM,UACf,IACEsE,GAAW,GACXC,EAAS,IAET,MAAOiM,EAAeC,SAAmBrR,QAAQuN,IAAI,CACnD3L,IACAM,MAGFiO,EAAaiB,GACbf,EAASgB,GAGTd,EAAS,CACPe,eAAgBF,EAAcjC,OAC9BoC,WAAYF,EAAUlC,OACtBqC,eAAgB,EAChBC,iBAAkB,GAGtB,CAAE,MAAO1R,GACPwC,QAAQxC,MAAM,sBAAuBA,GACrCoF,EAAS,+CACX,CAAC,QACCD,GAAW,EACb,GAmGF,OAAID,GAEAM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,UACxEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAC,yBAM7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,iCACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQnD,EAAKtB,aAChB0E,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oGAAmGC,SAAC,uCAM1HC,EAAAA,EAAAA,KAAA,UACEC,QAASgE,EACTnE,UAAU,sDAAqDC,SAChE,mBAQNvF,IACCwF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kEAAiEC,SAC7EvF,OAMPqF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAC,kBAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oCAAmCC,SAAC,WACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAAEgL,EAAMgB,0BAK7D/L,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAC,kBAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oCAAmCC,SAAC,gBACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAAEgL,EAAMkB,0BAK7DjM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAC,kBAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oCAAmCC,SAAC,sBACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAAEgL,EAAMiB,sBAK7DhM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAC,YAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oCAAmCC,SAAC,iBACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAAEgL,EAAMmB,+BAO/DlM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMqF,EAAa,aAC5BxF,UAAS,4CAAAvF,OACO,cAAd8K,EACI,gCACA,wDACHtF,SACJ,WAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMqF,EAAa,SAC5BxF,UAAS,4CAAAvF,OACO,UAAd8K,EACI,gCACA,wDACHtF,SACJ,6BAQPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,CAC5B,cAAdsF,IACCxF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,gBACpDC,EAAAA,EAAAA,KAAA,UACEC,QA1NSkM,KACvBf,EAAkB,MAClBE,EAAe,CAAE7G,KAAM,KACvByG,GAAoB,EAAK,EAwNXpL,UAAU,kFAAiFC,SAC5F,yBAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,iBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,qBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjD4K,EAAUrC,KAAK/L,IACdsD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/CxD,EAAQkI,UAGbzE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9D,IAAI/D,KAAKO,EAAQ6P,YAAYrD,mBAAmB,YAEnDlJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kDAAiDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAtPR1D,KACzB6O,EAAkB7O,GAClB+O,EAAe,CAAE7G,KAAMlI,EAAQkI,OAC/ByG,GAAoB,EAAK,EAmPcmB,CAAkB9P,GACjCuD,UAAU,yCAAwCC,SACnD,YAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAtPP5E,WAC1B,GAAIP,OAAO4N,QAAQ,4DACjB,UACQrM,EAAoBiQ,SACpBzE,GACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,0BAA2BA,GACzCoF,EAAS,wCACX,CACF,EA6OuC2M,CAAoBhQ,EAAQE,IAC3CqD,UAAU,kCAAiCC,SAC5C,mBAnBIxD,EAAQE,gBA+Bd,UAAd4I,IACCxF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,gCACpDC,EAAAA,EAAAA,KAAA,UACEC,QA5OMuM,KACpBd,EAAe,MACfE,EAAY,CAAEtQ,SAAU,GAAIC,SAAU,GAAI8B,KAAM,OAAQkH,WAAY,KACpEiH,GAAiB,EAAK,EA0OR1L,UAAU,kFAAiFC,SAC5F,+BAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,sCAAqCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,qBAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,UAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,WAG/FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFC,SAAC,gBAKnGC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCC,SACjD8K,EAAMvC,KAAK1L,IACViD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SAC/CnD,EAAKtB,cAGV0E,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,UACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,4DAAAvF,OACC,UAAdqC,EAAK6P,KAAmB,gCACV,UAAd7P,EAAK6P,KAAmB,4BACxB,+BACC1M,SACc,UAAdnD,EAAK6P,KAAmB,uBACV,UAAd7P,EAAK6P,KAAmB,gBAAkB,uBAG/CzM,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAC9DnD,EAAK4H,cAAgB,UAExB3E,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kDAAiDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IArRXrD,KACtB8O,EAAe9O,GACfgP,EAAY,CACVtQ,SAAUsB,EAAKtB,SACfC,SAAU,GACV8B,KAAMT,EAAKS,KACXkH,WAAY3H,EAAK2H,YAAc,KAEjCiH,GAAiB,EAAK,EA6QiBkB,CAAe9P,GAC9BkD,UAAU,yCAAwCC,SACnD,YAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAhRV5E,WACvB,GAAIP,OAAO4N,QAAQ,+DACjB,UACQ/L,EAAgBuC,SAChB2I,GACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,uBAAwBA,GACtCoF,EAAS,mDACX,CACF,EAuQuC+M,CAAiB/P,EAAKH,IACrCqD,UAAU,kCAAiCC,SAC5C,mBA7BInD,EAAKH,sBA4C7BwO,IACCjL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SACnDoL,EAAiB,oBAAiB,sBAErCtL,EAAAA,EAAAA,MAAA,QAAMU,SA1UUlF,UAC1BmF,EAAEC,iBACF,IACM0K,QACI9O,EAAoB8O,EAAe1O,GAAI4O,SAEvChP,EAAoBgP,GAE5BH,GAAoB,SACdrD,GACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,wBAAyBA,GACvCoF,EAAS,2CACX,GA6T8CG,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,iBAGhEC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,OACLwD,MAAOwK,EAAY5G,KACnB3D,SAAWN,GAAM8K,GAAcb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIY,GAAW,IAAE5G,KAAMjE,EAAEO,OAAOF,SACjEf,UAAU,yGACVkB,UAAQ,QAGZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACL4C,QAASA,IAAMiL,GAAoB,GACnCpL,UAAU,mEAAkEC,SAC7E,YAGDC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACLyC,UAAU,gEAA+DC,SAExEoL,EAAiB,cAAgB,uBAU/CI,IACCvL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wEAAuEC,UACpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SACnD0L,EAAc,0BAAuB,4BAExC5L,EAAAA,EAAAA,MAAA,QAAMU,SAtUOlF,UACvBmF,EAAEC,iBACF,IACE,MAAMmM,GAAQnC,EAAAA,EAAAA,GAAA,GAAQkB,GACjBiB,EAASrI,aACZqI,EAASrI,WAAa,MAGpBkH,GAEGmB,EAASrR,iBACLqR,EAASrR,eAEZoB,EAAgB8O,EAAYhP,GAAImQ,UAEhCjQ,EAAgBiQ,GAExBpB,GAAiB,SACX3D,GACR,CAAE,MAAOrN,GACPwC,QAAQxC,MAAM,qBAAsBA,GACpCoF,EAAS,sDACX,GAgT2CG,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,4BAGhEC,EAAAA,EAAAA,KAAA,SACE3C,KAAK,OACLwD,MAAO8K,EAASrQ,SAChBwF,SAAWN,GAAMoL,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkB,GAAQ,IAAErQ,SAAUkF,EAAEO,OAAOF,SAC/Df,UAAU,yGACVkB,UAAQ,QAGZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+CAA8CC,SAAA,CAAC,cACvD0L,GAAe,8CAExBzL,EAAAA,EAAAA,KAAA,SACE3C,KAAK,WACLwD,MAAO8K,EAASpQ,SAChBuF,SAAWN,GAAMoL,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkB,GAAQ,IAAEpQ,SAAUiF,EAAEO,OAAOF,SAC/Df,UAAU,yGACVkB,UAAWyK,QAGf5L,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,0BAGhEF,EAAAA,EAAAA,MAAA,UACEgB,MAAO8K,EAAStO,KAChByD,SAAWN,GAAMoL,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkB,GAAQ,IAAEtO,KAAMmD,EAAEO,OAAOF,SAC3Df,UAAU,yGAAwGC,SAAA,EAElHC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,QAAOd,SAAC,0BACtBC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,QAAOd,SAAC,mBACtBC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,OAAMd,SAAC,2BAGzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,WAGhEF,EAAAA,EAAAA,MAAA,UACEgB,MAAO8K,EAASpH,WAChBzD,SAAWN,GAAMoL,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkB,GAAQ,IAAEpH,WAAY/D,EAAEO,OAAOF,SACjEf,UAAU,yGAAwGC,SAAA,EAElHC,EAAAA,EAAAA,KAAA,UAAQa,MAAM,GAAEd,SAAC,2CAChB4K,EAAUrC,KAAI/L,IACbyD,EAAAA,EAAAA,KAAA,UAAyBa,MAAOtE,EAAQE,GAAGsD,SAAExD,EAAQkI,MAAxClI,EAAQE,aAI3BoD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACL4C,QAASA,IAAMuL,GAAiB,GAChC1L,UAAU,mEAAkEC,SAC7E,YAGDC,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACLyC,UAAU,gEAA+DC,SAExE0L,EAAc,cAAgB,yBAUnD,ECzcA,EAnEiBoB,KACf,MAAOjQ,EAAMkQ,IAAWtN,EAAAA,EAAAA,UAAS,OAC1BE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IAEvC+C,EAAAA,EAAAA,YAAU,KACRwK,GAAiB,GAChB,IAEH,MAAMA,EAAkB1R,UAEtB,GADcjB,aAAaC,QAAQ,SAEjC,IAEE,MAAM2S,EAAa5S,aAAaC,QAAQ,QACpC2S,EACFF,EAAQG,KAAKC,MAAMF,IAEnB5S,aAAac,WAAW,QAE5B,CAAE,MAAOV,GACPwC,QAAQxC,MAAM,qBAAsBA,GACpCJ,aAAac,WAAW,QAC1B,CAEFyE,GAAW,EAAM,EAGbwN,EAAcA,CAACP,EAAUzS,KAC7BC,aAAagT,QAAQ,QAASjT,GAC9BC,aAAagT,QAAQ,OAAQH,KAAKI,UAAUT,IAC5CE,EAAQF,EAAS,EAGbU,EAAeA,KACnBlT,aAAac,WAAW,SACxBd,aAAac,WAAW,QACxB4R,EAAQ,KAAK,EAGf,OAAIpN,GAEAM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,UACxEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAC,wBAK1BnD,EAKa,UAAdA,EAAKS,MACA2C,EAAAA,EAAAA,KAACuN,EAAc,CAAC3Q,KAAMA,EAAMqH,SAAUqJ,KAI7CtN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACxB,UAAdnD,EAAK6P,MACJzM,EAAAA,EAAAA,KAACwN,EAAc,CAAC5Q,KAAMA,EAAMqH,SAAUqJ,KAEtCtN,EAAAA,EAAAA,KAACyN,EAAa,CAAC7Q,KAAMA,EAAMqH,SAAUqJ,OAblCtN,EAAAA,EAAAA,KAAC0N,EAAS,CAACpO,QAAS6N,GAerB,C","sources":["services/api.js","components/LoginPage.js","components/QRScanner.js","components/UserDashboard.js","components/AdminDashboard.js","components/OwnerDashboard.js","components/PanelApp.js"],"sourcesContent":["import axios from 'axios';\n\n// Get backend URL from environment\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Only redirect to login if we're not already on the login page\n    if (error.response?.status === 401 && !window.location.pathname.includes('/panel')) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/panel';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API - CGI endpoints\nexport const authAPI = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/login.py3', { username, password });\n      return response.data;\n    } catch (error) {\n      // Re-throw error for proper handling in LoginPage\n      throw error;\n    }\n  },\n};\n\n// Cache dla API calls - optymalizacja wydajności\nconst apiCache = new Map();\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minut\n\nconst getCachedData = (key) => {\n  const cached = apiCache.get(key);\n  if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {\n    return cached.data;\n  }\n  return null;\n};\n\nconst setCachedData = (key, data) => {\n  apiCache.set(key, {\n    data,\n    timestamp: Date.now()\n  });\n};\n\n// Companies API - z cache\nexport const companiesAPI = {\n  getAll: async () => {\n    const cacheKey = 'companies_all';\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get('/companies.py3');\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  create: async (company) => {\n    const response = await api.post('/companies.py3', company);\n    // Wyczyść cache po dodaniu nowej firmy\n    apiCache.delete('companies_all');\n    return response.data;\n  },\n  \n  update: async (id, company) => {\n    const response = await api.put(`/companies.py3?id=${id}`, company);\n    // Wyczyść cache po aktualizacji\n    apiCache.delete('companies_all');\n    return response.data;\n  },\n  \n  delete: async (id) => {\n    const response = await api.delete(`/companies.py3?id=${id}`);\n    // Wyczyść cache po usunięciu\n    apiCache.delete('companies_all');\n    return response.data;\n  },\n};\n\n// Users API - z cache\nexport const usersAPI = {\n  getAll: async () => {\n    const cacheKey = 'users_all';\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get('/users.py3');\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  create: async (user) => {\n    const response = await api.post('/users.py3', user);\n    apiCache.delete('users_all');\n    return response.data;\n  },\n  \n  update: async (id, user) => {\n    const response = await api.put(`/users.py3?id=${id}`, user);\n    apiCache.delete('users_all');\n    return response.data;\n  },\n  \n  delete: async (id) => {\n    const response = await api.delete(`/users.py3?id=${id}`);\n    apiCache.delete('users_all');\n    return response.data;\n  },\n};\n\n// Employees API - z cache\nexport const employeesAPI = {\n  getAll: async () => {\n    const cacheKey = 'employees_all';\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get('/employees.py3');\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  create: async (employee) => {\n    const response = await api.post('/employees.py3', employee);\n    apiCache.delete('employees_all');\n    return response.data;\n  },\n  \n  update: async (id, employee) => {\n    const response = await api.put(`/employees.py3?id=${id}`, employee);\n    apiCache.delete('employees_all');\n    return response.data;\n  },\n  \n  delete: async (id) => {\n    const response = await api.delete(`/employees.py3?id=${id}`);\n    apiCache.delete('employees_all');\n    return response.data;\n  },\n  \n  generateQR: async (id) => {\n    const response = await api.get(`/qr_generate.py3?employee_id=${id}`);\n    return response.data;\n  },\n  \n  downloadQRPDF: async (id, employeeName) => {\n    try {\n      console.log('Downloading PDF for employee:', employeeName, 'ID:', id);\n      console.log('API URL:', API_BASE_URL);\n      \n      const response = await api.get(`/qr_generate.py3?employee_id=${id}&format=pdf`, {\n        responseType: 'blob'\n      });\n      \n      console.log('Response received:', response.status);\n      \n      // Create download link\n      const blob = new Blob([response.data], { type: 'application/pdf' });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      const safeName = employeeName.replace(/[^a-zA-Z0-9]/g, '_');\n      link.download = `qr_code_${safeName}.pdf`;\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      console.log('PDF download completed successfully');\n      return response.data;\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      throw error;\n    }\n  },\n};\n\n// Time Entries API - z cache\nexport const timeEntriesAPI = {\n  getAll: async () => {\n    const cacheKey = 'time_entries_all';\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get('/time_entries.py3');\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  create: async (timeEntry) => {\n    const response = await api.post('/time_entries.py3', timeEntry);\n    apiCache.delete('time_entries_all');\n    return response.data;\n  },\n  \n  update: async (id, timeEntry) => {\n    const response = await api.put(`/time_entries.py3?id=${id}`, timeEntry);\n    apiCache.delete('time_entries_all');\n    return response.data;\n  },\n  \n  delete: async (id) => {\n    const response = await api.delete(`/time_entries.py3?id=${id}`);\n    apiCache.delete('time_entries_all');\n    return response.data;\n  },\n};\n\n// Employee Summary API - z cache\nexport const employeeSummaryAPI = {\n  getSummary: async (month, year) => {\n    const cacheKey = `employee_summary_${month}_${year}`;\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    \n    const response = await api.get(`/employee_summary.py3?${params}`);\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  getEmployeeMonths: async (employeeId) => {\n    const cacheKey = `employee_months_${employeeId}`;\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get(`/employee_months.py3?employee_id=${employeeId}`);\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n  \n  getEmployeeDays: async (employeeId, yearMonth) => {\n    const cacheKey = `employee_days_${employeeId}_${yearMonth}`;\n    const cached = getCachedData(cacheKey);\n    if (cached) return cached;\n\n    const response = await api.get(`/employee_days.py3?employee_id=${employeeId}&year_month=${yearMonth}`);\n    setCachedData(cacheKey, response.data);\n    return response.data;\n  },\n};\n\n// QR Scan API\nexport const qrScanAPI = {\n  processScan: async (qrCode, userId) => {\n    const response = await api.post('/qr_scan.py3', { qr_code: qrCode, user_id: userId });\n    // Wyczyść cache po skanowaniu QR\n    apiCache.delete('time_entries_all');\n    return response.data;\n  },\n};\n\nexport default api;","import React, { useState } from 'react';\nimport { authAPI } from '../services/api';\n\nfunction LoginPage({ onLogin }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const result = await authAPI.login(username, password);\n      \n      if (result.access_token && result.user) {\n        onLogin(result.user, result.access_token);\n      } else {\n        setError('Błędne dane logowania');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Błędne dane logowania');\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center px-4\">\n      {/* Logo Button - Top Left */}\n      <div className=\"absolute top-4 left-4 z-10\">\n        <button \n          onClick={() => window.location.href = '/'}\n          className=\"flex items-center space-x-2 bg-white/10 backdrop-blur-sm text-white px-4 py-2 rounded-lg hover:bg-white/20 transition-all transform hover:scale-105\"\n        >\n          <div className=\"w-8 h-8 bg-white rounded-lg flex items-center justify-center\">\n            <svg className=\"w-5 h-5 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <span className=\"font-bold text-lg\">TimeTrackerPro</span>\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-xl p-8 w-full max-w-md\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\n            System Ewidencji\n          </h1>\n          <p className=\"text-gray-600\">Czasu Pracy</p>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Nazwa użytkownika\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Hasło\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              required\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition duration-200\"\n          >\n            {loading ? 'Logowanie...' : 'Zaloguj się'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;","import React, { useState, useEffect, useRef } from 'react';\nimport QrScanner from 'qr-scanner';\n\nfunction QRScanner({ onScan, loading, disabled }) {\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState(null);\n  const [facingMode, setFacingMode] = useState('environment');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [cooldownTimer, setCooldownTimer] = useState(0);\n  const [lastScannedCode, setLastScannedCode] = useState(null);\n  const [lastScanTime, setLastScanTime] = useState(0);\n  const [autoStartEnabled, setAutoStartEnabled] = useState(true);\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  const cooldownIntervalRef = useRef(null);\n  const isProcessingRef = useRef(false);\n  const lastScannedCodeRef = useRef(null);\n\n  useEffect(() => {\n    // Automatically start scanning when component mounts\n    if (autoStartEnabled && !disabled) {\n      startScanning();\n    }\n    \n    return () => {\n      stopScanning();\n      if (cooldownIntervalRef.current) {\n        clearInterval(cooldownIntervalRef.current);\n      }\n    };\n  }, []);\n\n  // Sync refs with state\n  useEffect(() => {\n    isProcessingRef.current = isProcessing;\n  }, [isProcessing]);\n\n  useEffect(() => {\n    lastScannedCodeRef.current = lastScannedCode;\n  }, [lastScannedCode]);\n\n  const startCooldown = () => {\n    // Stop scanning immediately after detecting QR code\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    \n    setCooldownTimer(5);\n    setIsProcessing(true);\n    isProcessingRef.current = true;\n    \n    if (cooldownIntervalRef.current) {\n      clearInterval(cooldownIntervalRef.current);\n    }\n    \n    cooldownIntervalRef.current = setInterval(() => {\n      setCooldownTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(cooldownIntervalRef.current);\n          setIsProcessing(false);\n          isProcessingRef.current = false;\n          setLastScannedCode(null);\n          lastScannedCodeRef.current = null;\n          \n          // Automatically restart scanning after cooldown if auto-start is enabled\n          if (autoStartEnabled && !disabled) {\n            setTimeout(() => {\n              startScanning();\n            }, 100); // Shorter delay to ensure immediate restart\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  const startScanning = async () => {\n    try {\n      setError(null);\n      setIsScanning(true);\n\n      if (qrScannerRef.current) {\n        qrScannerRef.current.destroy();\n      }\n\n      const qrScanner = new QrScanner(\n        videoRef.current,\n        (result) => {\n          if (result && result.data) {\n            const currentTime = Date.now();\n            \n            console.log('QR Code detected:', result.data);\n            \n            // Prevent rapid successive scans (minimum 1 second between scans)\n            if (currentTime - lastScanTime < 1000) {\n              console.log('Too rapid scanning, ignoring...');\n              return;\n            }\n            \n            // Prevent scanning the same code during processing\n            if (lastScannedCodeRef.current === result.data && isProcessingRef.current) {\n              console.log('Same code detected during cooldown, ignoring...');\n              return;\n            }\n            \n            // Prevent multiple scans during processing\n            if (isProcessingRef.current || loading) {\n              console.log('Processing in progress, ignoring scan...');\n              return;\n            }\n            \n            setLastScanTime(currentTime);\n            setLastScannedCode(result.data);\n            lastScannedCodeRef.current = result.data;\n            \n            // Call the scan handler\n            onScan(result.data);\n            \n            // Start cooldown which will stop the scanner\n            startCooldown();\n          }\n        },\n        {\n          onDecodeError: (err) => {\n            // Ignore decode errors as they're common during scanning\n            // console.log('Decode error (normal during scanning):', err);\n          },\n          preferredCamera: facingMode,\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n          returnDetailedScanResult: true,\n          maxScansPerSecond: 2, // Limit scan frequency\n        }\n      );\n\n      qrScannerRef.current = qrScanner;\n      await qrScanner.start();\n\n    } catch (err) {\n      console.error('Error starting QR scanner:', err);\n      setError('Nie można uzyskać dostępu do kamery. Sprawdź uprawnienia.');\n      setIsScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.destroy();\n      qrScannerRef.current = null;\n    }\n    setIsScanning(false);\n    if (cooldownIntervalRef.current) {\n      clearInterval(cooldownIntervalRef.current);\n      setCooldownTimer(0);\n      setIsProcessing(false);\n      isProcessingRef.current = false;\n    }\n    setLastScannedCode(null);\n    lastScannedCodeRef.current = null;\n  };\n\n  const toggleCamera = async () => {\n    if (isProcessing) {\n      setError('Nie można przełączyć kamery podczas przetwarzania');\n      return;\n    }\n\n    const newFacingMode = facingMode === 'environment' ? 'user' : 'environment';\n    setFacingMode(newFacingMode);\n    \n    if (qrScannerRef.current) {\n      try {\n        await qrScannerRef.current.setCamera(newFacingMode);\n      } catch (err) {\n        console.error('Error switching camera:', err);\n        setError('Nie można przełączyć kamery');\n      }\n    }\n  };\n\n  const handleStartStop = () => {\n    if (isProcessing) {\n      return; // Don't allow starting/stopping during processing\n    }\n    \n    if (isScanning) {\n      stopScanning();\n      setAutoStartEnabled(false); // Disable auto-start when manually stopped\n    } else {\n      setAutoStartEnabled(true); // Enable auto-start when manually started\n      startScanning();\n    }\n  };\n\n  useEffect(() => {\n    if (isScanning && !isProcessing && facingMode) {\n      startScanning();\n    }\n  }, [facingMode]);\n\n  return (\n    <div className=\"qr-scanner-container\">\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n          <button \n            onClick={() => setError(null)}\n            className=\"ml-2 text-red-800 hover:text-red-900\"\n          >\n            ✕\n          </button>\n        </div>\n      )}\n\n      {/* Cooldown Timer */}\n      {cooldownTimer > 0 && (\n        <div className=\"bg-orange-100 border border-orange-400 text-orange-700 px-4 py-3 rounded mb-4\">\n          <div className=\"flex items-center\">\n            <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"font-medium\">\n              Kod został zeskanowany! Automatyczne ponowne uruchomienie za {cooldownTimer} sekund\n            </span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"relative\">\n        <video\n          ref={videoRef}\n          className=\"qr-scanner-video w-full h-64 object-cover rounded-lg\"\n          style={{ display: (isScanning || isProcessing) ? 'block' : 'none' }}\n        />\n        \n        {!isScanning && !isProcessing && (\n          <div className=\"w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center\">\n            <div className=\"text-center\">\n              <svg className=\"w-16 h-16 mx-auto text-gray-400 mb-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clipRule=\"evenodd\" />\n              </svg>\n              <p className=\"text-gray-500\">Kamera nie jest aktywna</p>\n            </div>\n          </div>\n        )}\n\n        {/* Processing Overlay */}\n        {(loading || isProcessing) && (\n          <div className=\"absolute inset-0 bg-black/60 flex items-center justify-center rounded-lg\">\n            <div className=\"text-center text-white\">\n              <div className=\"spinner border-4 border-gray-300 border-t-blue-500 rounded-full w-8 h-8 animate-spin mx-auto mb-2\"></div>\n              <p className=\"text-sm font-medium\">\n                {isProcessing ? `Automatyczne uruchomienie za ${cooldownTimer}s` : 'Przetwarzanie...'}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Scan Region Indicator */}\n        {(isScanning || isProcessing) && !loading && (\n          <div className=\"absolute inset-0 pointer-events-none\">\n            <div className=\"absolute top-4 left-4 w-8 h-8 border-t-2 border-l-2 border-green-500\"></div>\n            <div className=\"absolute top-4 right-4 w-8 h-8 border-t-2 border-r-2 border-green-500\"></div>\n            <div className=\"absolute bottom-4 left-4 w-8 h-8 border-b-2 border-l-2 border-green-500\"></div>\n            <div className=\"absolute bottom-4 right-4 w-8 h-8 border-b-2 border-r-2 border-green-500\"></div>\n            \n            {/* Center crosshair */}\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n              <div className=\"w-6 h-6 border-2 border-green-500 bg-green-500/20 rounded\"></div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex gap-2 mt-4\">\n        <button\n          onClick={handleStartStop}\n          disabled={disabled || isProcessing}\n          className={`flex-1 px-4 py-2 rounded-md font-medium transition-colors ${\n            isScanning\n              ? 'bg-red-600 text-white hover:bg-red-700'\n              : 'bg-blue-600 text-white hover:bg-blue-700'\n          } disabled:opacity-50 disabled:cursor-not-allowed`}\n        >\n          {isProcessing ? `Automatyczne uruchomienie za ${cooldownTimer}s` : (isScanning ? 'Zatrzymaj' : 'Uruchom skaner')}\n        </button>\n\n        {isScanning && (\n          <button\n            onClick={toggleCamera}\n            disabled={disabled || isProcessing}\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            title=\"Przełącz kamerę\"\n          >\n            📷\n          </button>\n        )}\n      </div>\n\n      <div className=\"mt-2 text-sm text-gray-600\">\n        <p>• Kamera: {facingMode === 'environment' ? 'Tylna' : 'Przednia'}</p>\n        <p>• Skaner automatycznie uruchamia się po załadowaniu</p>\n        <p>• Automatyczne ponowne uruchomienie po 5 sekundach</p>\n        <p>• ⚡ Ulepszona stabilność - brak bugów podczas skanowania</p>\n        {isProcessing && (\n          <p className=\"text-orange-600 font-medium\">\n            • ⏳ Odliczanie: {cooldownTimer} sekund do ponownego uruchomienia\n          </p>\n        )}\n        {!isScanning && !isProcessing && (\n          <p className=\"text-blue-600 font-medium\">\n            • 🔄 Automatyczne uruchamianie: {autoStartEnabled ? 'Włączone' : 'Wyłączone'}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default QRScanner;","import React, { useState, useEffect } from 'react';\nimport QRScanner from './QRScanner';\nimport { qrScanAPI } from '../services/api';\n\nfunction UserDashboard({ user, onLogout }) {\n  const [scanResult, setScanResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [companyInfo, setCompanyInfo] = useState(null);\n\n  useEffect(() => {\n    fetchCompanyInfo();\n  }, []);\n\n  const fetchCompanyInfo = async () => {\n    try {\n      // Use company info from user data\n      if (user.company_id && user.company_name) {\n        setCompanyInfo({ id: user.company_id, name: user.company_name });\n      }\n    } catch (error) {\n      console.error('Błąd pobierania informacji o firmie:', error);\n    }\n  };\n\n  const handleQRScan = async (qrData) => {\n    setLoading(true);\n    setScanResult(null);\n\n    try {\n      // Process QR scan using the new API\n      const result = await qrScanAPI.processScan(qrData, user.id);\n      \n      if (result.success) {\n        setScanResult({\n          success: true,\n          action: result.action,\n          employee: result.employee_name,\n          time: result.time,\n          message: result.message,\n          cooldown_seconds: result.cooldown_seconds\n        });\n      } else {\n        setScanResult({\n          success: false,\n          message: result.message,\n          isUnauthorized: true\n        });\n      }\n\n    } catch (error) {\n      console.error('Error processing QR scan:', error);\n      setScanResult({\n        success: false,\n        message: 'Błąd połączenia z serwerem'\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const clearResult = () => {\n    setScanResult(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm\">\n        <div className=\"max-w-md mx-auto px-4 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-xl font-semibold text-gray-800\">Skaner QR</h1>\n              <div className=\"text-sm text-gray-600 space-y-1\">\n                <p>Witaj, {user.username}</p>\n                {companyInfo && (\n                  <p>\n                    <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                      🏢 {companyInfo.name}\n                    </span>\n                  </p>\n                )}\n              </div>\n            </div>\n            <button\n              onClick={onLogout}\n              className=\"text-sm text-red-600 hover:text-red-800 font-medium\"\n            >\n              Wyloguj\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-md mx-auto px-4 py-6\">\n        {/* Company Security Notice */}\n        {companyInfo && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n            <h2 className=\"text-lg font-semibold text-green-800 mb-2\">\n              🔒 Zabezpieczenie Firmy\n            </h2>\n            <ul className=\"text-sm text-green-700 space-y-1\">\n              <li>• Możesz skanować tylko kody QR z Twojej firmy</li>\n              <li>• Dane firm są całkowicie oddzielone</li>\n              <li>• Twoja firma: <strong>{companyInfo.name}</strong></li>\n            </ul>\n          </div>\n        )}\n\n        {/* Instructions */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n          <h2 className=\"text-lg font-semibold text-blue-800 mb-2\">\n            Instrukcja użycia\n          </h2>\n          <ul className=\"text-sm text-blue-700 space-y-1\">\n            <li>• Skaner uruchamia się automatycznie po załadowaniu strony</li>\n            <li>• Zeskanuj kod QR pracownika z Twojej firmy</li>\n            <li>• Pierwsze skanowanie = rozpoczęcie pracy</li>\n            <li>• Drugie skanowanie = zakończenie pracy</li>\n            <li>• 🛡️ Automatyczne zatrzymanie po wykryciu kodu</li>\n            <li>• ⏰ Automatyczne ponowne uruchomienie po 5 sekundach</li>\n            <li>• 🔄 Możliwość przełączania kamery przód/tył</li>\n            <li>• 🎯 Nie musisz klikać przycisków - wszystko działa automatycznie!</li>\n          </ul>\n        </div>\n\n        {/* QR Scanner */}\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\n            Skanuj kod QR\n          </h3>\n          <QRScanner \n            onScan={handleQRScan} \n            loading={loading}\n            disabled={loading}\n          />\n        </div>\n\n        {/* Scan Result */}\n        {scanResult && (\n          <div className={`rounded-lg p-4 mb-6 ${\n            scanResult.success \n              ? 'bg-green-50 border border-green-200' \n              : scanResult.isCooldown\n              ? 'bg-orange-50 border border-orange-200'\n              : scanResult.isUnauthorized\n              ? 'bg-red-50 border border-red-200'\n              : 'bg-red-50 border border-red-200'\n          }`}>\n            <div className=\"flex justify-between items-start\">\n              <div className=\"flex-1\">\n                {scanResult.success ? (\n                  <div>\n                    <div className=\"flex items-center mb-2\">\n                      <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <h3 className=\"text-lg font-semibold text-green-800\">\n                        {scanResult.action === 'check_in' ? 'Rozpoczęto pracę' : 'Zakończono pracę'}\n                      </h3>\n                    </div>\n                    <div className=\"text-green-700 space-y-1\">\n                      <p><strong>Pracownik:</strong> {scanResult.employee}</p>\n                      <p><strong>Czas:</strong> {scanResult.time}</p>\n                      <p className=\"text-sm\">{scanResult.message}</p>\n                    </div>\n                  </div>\n                ) : scanResult.isUnauthorized ? (\n                  <div>\n                    <div className=\"flex items-center mb-2\">\n                      <svg className=\"w-5 h-5 text-red-600 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <h3 className=\"text-lg font-semibold text-red-800\">Brak dostępu</h3>\n                    </div>\n                    <p className=\"text-red-700\">{scanResult.message}</p>\n                    <p className=\"text-sm text-red-600 mt-1\">Możesz skanować tylko kody QR pracowników z Twojej firmy.</p>\n                  </div>\n                ) : (\n                  <div>\n                    <div className=\"flex items-center mb-2\">\n                      <svg className=\"w-5 h-5 text-red-600 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <h3 className=\"text-lg font-semibold text-red-800\">Błąd</h3>\n                    </div>\n                    <p className=\"text-red-700\">{scanResult.message}</p>\n                  </div>\n                )}\n              </div>\n              <button\n                onClick={clearResult}\n                className=\"ml-4 text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Help */}\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">Pomoc</h3>\n          <div className=\"text-sm text-gray-600 space-y-1\">\n            <p>• Upewnij się, że kamera ma dostęp do urządzenia</p>\n            <p>• Trzymaj kod QR w centrum kamery</p>\n            <p>• Poczekaj na automatyczne rozpoznanie</p>\n            <p>• Kod QR musi należeć do Twojej firmy</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDashboard;","import React, { useState, useEffect } from 'react';\nimport { employeesAPI, timeEntriesAPI, employeeSummaryAPI } from '../services/api';\n\nfunction AdminDashboard({ user, onLogout }) {\n  const [activeTab, setActiveTab] = useState('employees');\n  const [employees, setEmployees] = useState([]);\n  const [timeReports, setTimeReports] = useState([]);\n  const [companyInfo, setCompanyInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Employee Summary state\n  const [employeeSummary, setEmployeeSummary] = useState([]);\n  const [selectedSummaryEmployee, setSelectedSummaryEmployee] = useState(null);\n  const [employeeMonths, setEmployeeMonths] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [employeeDays, setEmployeeDays] = useState([]);\n  const [summaryView, setSummaryView] = useState('main'); // 'main', 'months', 'days'\n\n  // QR Code modal state\n  const [showQRModal, setShowQRModal] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [qrCodeData, setQRCodeData] = useState(null);\n\n  // Employee management state\n  const [showEmployeeModal, setShowEmployeeModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [employeeForm, setEmployeeForm] = useState({\n    name: '',\n    is_active: true\n  });\n\n  // Time entry editing/adding state\n  const [showTimeEntryModal, setShowTimeEntryModal] = useState(false);\n  const [editingTimeEntry, setEditingTimeEntry] = useState(null);\n  const [timeEntryForm, setTimeEntryForm] = useState({\n    employee_id: '',\n    check_in: '',\n    check_out: ''\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Load company info from user data (admin can't access companies API)\n      if (user.company_id && user.company_name) {\n        setCompanyInfo({ id: user.company_id, name: user.company_name });\n      }\n\n      // Load employees and time reports\n      const [employeesData, timeEntriesData] = await Promise.all([\n        employeesAPI.getAll(),\n        timeEntriesAPI.getAll()\n      ]);\n\n      setEmployees(employeesData);\n      setTimeReports(timeEntriesData);\n\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Błąd podczas ładowania danych');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Employee Summary Functions\n  const loadEmployeeSummary = async (month, year) => {\n    try {\n      setLoading(true);\n      setError('');\n      const summaryData = await employeeSummaryAPI.getSummary(month, year);\n      setEmployeeSummary(summaryData);\n    } catch (error) {\n      console.error('Error loading employee summary:', error);\n      setError('Błąd podczas ładowania podsumowania pracowników');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmployeeClick = async (employee) => {\n    try {\n      setSelectedSummaryEmployee(employee);\n      setLoading(true);\n      setError('');\n      \n      const monthsData = await employeeSummaryAPI.getEmployeeMonths(employee.employee_id);\n      setEmployeeMonths(monthsData);\n      setSummaryView('months');\n    } catch (error) {\n      console.error('Error loading employee months:', error);\n      setError('Błąd podczas ładowania miesięcy pracownika');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMonthClick = async (month) => {\n    try {\n      setSelectedMonth(month);\n      setLoading(true);\n      setError('');\n      \n      const daysData = await employeeSummaryAPI.getEmployeeDays(\n        selectedSummaryEmployee.employee_id, \n        month.month\n      );\n      setEmployeeDays(daysData);\n      setSummaryView('days');\n    } catch (error) {\n      console.error('Error loading employee days:', error);\n      setError('Błąd podczas ładowania dni pracownika');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackToSummary = () => {\n    setSummaryView('main');\n    setSelectedSummaryEmployee(null);\n    setEmployeeMonths([]);\n    setSelectedMonth(null);\n    setEmployeeDays([]);\n  };\n\n  const handleBackToMonths = () => {\n    setSummaryView('months');\n    setSelectedMonth(null);\n    setEmployeeDays([]);\n  };\n\n  const generateQRCode = async (employee) => {\n    try {\n      setError('');\n      const qrData = await employeesAPI.generateQR(employee.id);\n      setSelectedEmployee(employee);\n      setQRCodeData(qrData);\n      setShowQRModal(true);\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n      setError('Błąd podczas generowania kodu QR');\n    }\n  };\n\n  const downloadQRPDF = async (employee) => {\n    try {\n      setError('');\n      await employeesAPI.downloadQRPDF(employee.id, employee.name);\n    } catch (error) {\n      console.error('Error downloading QR PDF:', error);\n      setError('Błąd podczas pobierania PDF z kodem QR');\n    }\n  };\n\n  // Employee Management Functions\n  const handleAddEmployee = () => {\n    setEditingEmployee(null);\n    setEmployeeForm({\n      name: '',\n      is_active: true\n    });\n    setShowEmployeeModal(true);\n  };\n\n  const handleEditEmployee = (employee) => {\n    setEditingEmployee(employee);\n    setEmployeeForm({\n      name: employee.name,\n      is_active: employee.is_active\n    });\n    setShowEmployeeModal(true);\n  };\n\n  const handleDeleteEmployee = async (employeeId) => {\n    if (window.confirm('Czy na pewno chcesz usunąć tego pracownika?')) {\n      try {\n        await employeesAPI.delete(employeeId);\n        await loadData();\n      } catch (error) {\n        console.error('Error deleting employee:', error);\n        setError('Błąd podczas usuwania pracownika');\n      }\n    }\n  };\n\n  const handleEmployeeSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const employeeData = {\n        ...employeeForm,\n        company_id: user.company_id\n      };\n      \n      if (editingEmployee) {\n        await employeesAPI.update(editingEmployee.id, employeeData);\n      } else {\n        await employeesAPI.create(employeeData);\n      }\n      \n      setShowEmployeeModal(false);\n      await loadData();\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      setError('Błąd podczas zapisywania pracownika');\n    }\n  };\n\n  const handleEditTimeEntry = (timeEntry) => {\n    setEditingTimeEntry(timeEntry);\n    setTimeEntryForm({\n      employee_id: timeEntry.employee_id,\n      check_in: timeEntry.check_in ? new Date(timeEntry.check_in).toISOString().slice(0, 16) : '',\n      check_out: timeEntry.check_out ? new Date(timeEntry.check_out).toISOString().slice(0, 16) : ''\n    });\n    setShowTimeEntryModal(true);\n  };\n\n  const handleAddTimeEntry = () => {\n    setEditingTimeEntry(null);\n    setTimeEntryForm({\n      employee_id: '',\n      check_in: '',\n      check_out: ''\n    });\n    setShowTimeEntryModal(true);\n  };\n\n  const handleTimeEntrySubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const entryData = {\n        employee_id: timeEntryForm.employee_id,\n        check_in: timeEntryForm.check_in ? new Date(timeEntryForm.check_in).toISOString() : null,\n        check_out: timeEntryForm.check_out ? new Date(timeEntryForm.check_out).toISOString() : null\n      };\n      \n      if (editingTimeEntry) {\n        await timeEntriesAPI.update(editingTimeEntry.id, entryData);\n      } else {\n        await timeEntriesAPI.create(entryData);\n      }\n      \n      setShowTimeEntryModal(false);\n      await loadData();\n    } catch (error) {\n      console.error('Error saving time entry:', error);\n      setError('Błąd podczas zapisywania wpisu czasu');\n    }\n  };\n\n  const handleDeleteTimeEntry = async (timeEntryId) => {\n    if (window.confirm('Czy na pewno chcesz usunąć ten wpis czasu?')) {\n      try {\n        await timeEntriesAPI.delete(timeEntryId);\n        await loadData();\n      } catch (error) {\n        console.error('Error deleting time entry:', error);\n        setError('Błąd podczas usuwania wpisu czasu');\n      }\n    }\n  };\n\n  // Get employee name by ID\n  const getEmployeeName = (employeeId) => {\n    const employee = employees.find(e => e.id === employeeId);\n    return employee ? employee.name : 'Nieznany';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div className=\"text-xl\">Ładowanie...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-800\">Panel Administratora</h1>\n              <div className=\"text-sm text-gray-600\">\n                <p>Witaj, {user.username}</p>\n                {companyInfo && (\n                  <p>\n                    <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                      🏢 {companyInfo.name}\n                    </span>\n                  </p>\n                )}\n              </div>\n            </div>\n            <button\n              onClick={onLogout}\n              className=\"text-sm text-red-600 hover:text-red-800 font-medium\"\n            >\n              Wyloguj\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            {error}\n          </div>\n        </div>\n      )}\n\n      {/* Navigation */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <nav className=\"flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('employees')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'employees'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Pracownicy\n            </button>\n            <button\n              onClick={() => setActiveTab('reports')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'reports'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Raporty czasu\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('summary');\n                if (activeTab !== 'summary') {\n                  setSummaryView('main');\n                  loadEmployeeSummary();\n                }\n              }}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'summary'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Podsumowanie pracowników\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 py-6\">\n        {activeTab === 'employees' && (\n          <div>\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <div className=\"px-6 py-4 border-b flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold text-gray-800\">Lista pracowników</h2>\n                <button\n                  onClick={handleAddEmployee}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Dodaj pracownika\n                </button>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Imię i nazwisko\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Kod QR\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Akcje\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {employees.map((employee) => (\n                      <tr key={employee.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {employee.name}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-500\">\n                            {employee.qr_code}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            employee.is_active\n                              ? 'bg-green-100 text-green-800'\n                              : 'bg-red-100 text-red-800'\n                          }`}>\n                            {employee.is_active ? 'Aktywny' : 'Nieaktywny'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button\n                            onClick={() => handleEditEmployee(employee)}\n                            className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                          >\n                            Edytuj\n                          </button>\n                          <button\n                            onClick={() => generateQRCode(employee)}\n                            className=\"text-green-600 hover:text-green-900 mr-4\"\n                          >\n                            Generuj QR\n                          </button>\n                          <button\n                            onClick={() => downloadQRPDF(employee)}\n                            className=\"text-purple-600 hover:text-purple-900 mr-4\"\n                          >\n                            Pobierz PDF\n                          </button>\n                          <button\n                            onClick={() => handleDeleteEmployee(employee.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Usuń\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'reports' && (\n          <div>\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <div className=\"px-6 py-4 border-b flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold text-gray-800\">Raporty czasu pracy</h2>\n                <button\n                  onClick={handleAddTimeEntry}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Dodaj wpis\n                </button>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Imię i nazwisko\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Data\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Przyjście\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Wyjście\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Godziny pracy\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Akcje\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {timeReports.map((report) => (\n                      <tr key={report.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {getEmployeeName(report.employee_id)}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(report.date).toLocaleDateString('pl-PL')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(report.check_in).toLocaleTimeString('pl-PL', { \n                            hour: '2-digit', \n                            minute: '2-digit' \n                          })}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {report.check_out ? new Date(report.check_out).toLocaleTimeString('pl-PL', { \n                            hour: '2-digit', \n                            minute: '2-digit' \n                          }) : '-'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {report.total_hours || 0}h\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button\n                            onClick={() => handleEditTimeEntry(report)}\n                            className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                          >\n                            Edytuj\n                          </button>\n                          <button\n                            onClick={() => handleDeleteTimeEntry(report.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Usuń\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'summary' && (\n          <div>\n            {summaryView === 'main' && (\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"px-6 py-4 border-b\">\n                  <h2 className=\"text-lg font-semibold text-gray-800\">\n                    Podsumowanie pracowników - {new Date().toLocaleDateString('pl-PL', { month: 'long', year: 'numeric' })}\n                  </h2>\n                  <p className=\"text-sm text-gray-600 mt-1\">\n                    Kliknij na pracownika, aby zobaczyć szczegóły miesięcy\n                  </p>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Imię i nazwisko\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Liczba godzin w miesiącu\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Akcje\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {employeeSummary.map((employee) => (\n                        <tr key={employee.employee_id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {employee.employee_name}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900 font-semibold\">\n                              {employee.total_hours.toFixed(1)}h\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                            <button\n                              onClick={() => handleEmployeeClick(employee)}\n                              className=\"text-blue-600 hover:text-blue-900\"\n                            >\n                              Zobacz miesiące\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  {employeeSummary.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      Brak danych o pracownikach\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {summaryView === 'months' && selectedSummaryEmployee && (\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"px-6 py-4 border-b\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800\">\n                        Miesiące pracy - {selectedSummaryEmployee.employee_name}\n                      </h2>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        Kliknij na miesiąc, aby zobaczyć szczegóły dni\n                      </p>\n                    </div>\n                    <button\n                      onClick={handleBackToSummary}\n                      className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\n                    >\n                      ← Powrót do podsumowania\n                    </button>\n                  </div>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Miesiąc\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Liczba godzin\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Dni pracy\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Akcje\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {employeeMonths.map((month) => (\n                        <tr key={month.month} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {new Date(month.month + '-01').toLocaleDateString('pl-PL', { month: 'long', year: 'numeric' })}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900 font-semibold\">\n                              {month.total_hours.toFixed(1)}h\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">\n                              {month.days_worked} dni\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                            <button\n                              onClick={() => handleMonthClick(month)}\n                              className=\"text-blue-600 hover:text-blue-900\"\n                            >\n                              Zobacz dni\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  {employeeMonths.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      Brak danych o miesiącach pracy\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {summaryView === 'days' && selectedSummaryEmployee && selectedMonth && (\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"px-6 py-4 border-b\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800\">\n                        Dni pracy - {selectedSummaryEmployee.employee_name}\n                      </h2>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        {new Date(selectedMonth.month + '-01').toLocaleDateString('pl-PL', { month: 'long', year: 'numeric' })}\n                      </p>\n                    </div>\n                    <button\n                      onClick={handleBackToMonths}\n                      className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\n                    >\n                      ← Powrót do miesięcy\n                    </button>\n                  </div>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Data\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Przyjście\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Wyjście\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Godziny pracy\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {employeeDays.map((day) => (\n                        <tr key={day.date}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {new Date(day.date).toLocaleDateString('pl-PL', { \n                                weekday: 'long', \n                                year: 'numeric', \n                                month: 'long', \n                                day: 'numeric' \n                              })}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">\n                              {day.check_in || '-'}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">\n                              {day.check_out || '-'}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900 font-semibold\">\n                              {day.total_hours ? day.total_hours.toFixed(1) + 'h' : '-'}\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  {employeeDays.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      Brak danych o dniach pracy\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* QR Code Modal */}\n      {showQRModal && selectedEmployee && qrCodeData && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3 text-center\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                Kod QR dla {selectedEmployee.name}\n              </h3>\n              <div className=\"mb-4\">\n                <img \n                  src={`data:image/png;base64,${qrCodeData.qr_code_image}`} \n                  alt=\"QR Code\" \n                  className=\"mx-auto border rounded-lg\"\n                />\n              </div>\n              <div className=\"text-sm text-gray-600 mb-4\">\n                <p>Kod: <span className=\"font-mono font-bold\">{qrCodeData.qr_code_data}</span></p>\n              </div>\n              <div className=\"flex justify-center\">\n                <button\n                  onClick={() => setShowQRModal(false)}\n                  className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\n                >\n                  Zamknij\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Time Entry Edit/Add Modal */}\n      {showTimeEntryModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingTimeEntry ? \n                  `Edytuj wpis czasu - ${getEmployeeName(editingTimeEntry.employee_id)}` : \n                  'Dodaj nowy wpis czasu'\n                }\n              </h3>\n              <form onSubmit={handleTimeEntrySubmit}>\n                {!editingTimeEntry && (\n                  <div className=\"mb-4\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Pracownik\n                    </label>\n                    <select\n                      value={timeEntryForm.employee_id}\n                      onChange={(e) => setTimeEntryForm({ ...timeEntryForm, employee_id: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    >\n                      <option value=\"\">Wybierz pracownika</option>\n                      {employees.map(employee => (\n                        <option key={employee.id} value={employee.id}>{employee.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n                {editingTimeEntry && (\n                  <div className=\"mb-4\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Data: {new Date(editingTimeEntry.date).toLocaleDateString('pl-PL')}\n                    </label>\n                  </div>\n                )}\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Przyjście\n                  </label>\n                  <input\n                    type=\"datetime-local\"\n                    value={timeEntryForm.check_in}\n                    onChange={(e) => setTimeEntryForm({ ...timeEntryForm, check_in: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Wyjście\n                  </label>\n                  <input\n                    type=\"datetime-local\"\n                    value={timeEntryForm.check_out}\n                    onChange={(e) => setTimeEntryForm({ ...timeEntryForm, check_out: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowTimeEntryModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\n                  >\n                    Anuluj\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                  >\n                    {editingTimeEntry ? 'Zaktualizuj' : 'Dodaj'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Employee Modal */}\n      {showEmployeeModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingEmployee ? 'Edytuj pracownika' : 'Dodaj pracownika'}\n              </h3>\n              <form onSubmit={handleEmployeeSubmit}>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Imię i nazwisko\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={employeeForm.name}\n                    onChange={(e) => setEmployeeForm({ ...employeeForm, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Status\n                  </label>\n                  <select\n                    value={employeeForm.is_active}\n                    onChange={(e) => setEmployeeForm({ ...employeeForm, is_active: e.target.value === 'true' })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"true\">Aktywny</option>\n                    <option value=\"false\">Nieaktywny</option>\n                  </select>\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowEmployeeModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\n                  >\n                    Anuluj\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                  >\n                    {editingEmployee ? 'Zaktualizuj' : 'Dodaj'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminDashboard;","import React, { useState, useEffect } from 'react';\nimport { companiesAPI, usersAPI } from '../services/api';\n\nfunction OwnerDashboard({ user, onLogout }) {\n  const [activeTab, setActiveTab] = useState('companies');\n  const [companies, setCompanies] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Company management state\n  const [showCompanyModal, setShowCompanyModal] = useState(false);\n  const [editingCompany, setEditingCompany] = useState(null);\n  const [companyForm, setCompanyForm] = useState({ name: '' });\n\n  // User management state\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [userForm, setUserForm] = useState({ \n    username: '', \n    password: '', \n    type: 'user', \n    company_id: '' \n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      const [companiesData, usersData] = await Promise.all([\n        companiesAPI.getAll(),\n        usersAPI.getAll()\n      ]);\n\n      setCompanies(companiesData);\n      setUsers(usersData);\n      \n      // Calculate stats\n      setStats({\n        totalCompanies: companiesData.length,\n        totalUsers: usersData.length,\n        totalEmployees: 0, // Will be calculated when employees API is called\n        totalTimeEntries: 0\n      });\n\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Błąd podczas ładowania danych');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Company Management Functions\n  const handleAddCompany = () => {\n    setEditingCompany(null);\n    setCompanyForm({ name: '' });\n    setShowCompanyModal(true);\n  };\n\n  const handleEditCompany = (company) => {\n    setEditingCompany(company);\n    setCompanyForm({ name: company.name });\n    setShowCompanyModal(true);\n  };\n\n  const handleDeleteCompany = async (companyId) => {\n    if (window.confirm('Czy na pewno chcesz usunąć tę firmę?')) {\n      try {\n        await companiesAPI.delete(companyId);\n        await loadData();\n      } catch (error) {\n        console.error('Error deleting company:', error);\n        setError('Błąd podczas usuwania firmy');\n      }\n    }\n  };\n\n  const handleCompanySubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingCompany) {\n        await companiesAPI.update(editingCompany.id, companyForm);\n      } else {\n        await companiesAPI.create(companyForm);\n      }\n      setShowCompanyModal(false);\n      await loadData();\n    } catch (error) {\n      console.error('Error saving company:', error);\n      setError('Błąd podczas zapisywania firmy');\n    }\n  };\n\n  // User Management Functions\n  const handleAddUser = () => {\n    setEditingUser(null);\n    setUserForm({ username: '', password: '', type: 'user', company_id: '' });\n    setShowUserModal(true);\n  };\n\n  const handleEditUser = (user) => {\n    setEditingUser(user);\n    setUserForm({ \n      username: user.username, \n      password: '', \n      type: user.type, \n      company_id: user.company_id || '' \n    });\n    setShowUserModal(true);\n  };\n\n  const handleDeleteUser = async (userId) => {\n    if (window.confirm('Czy na pewno chcesz usunąć tego użytkownika?')) {\n      try {\n        await usersAPI.delete(userId);\n        await loadData();\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setError('Błąd podczas usuwania użytkownika');\n      }\n    }\n  };\n\n  const handleUserSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const userData = { ...userForm };\n      if (!userData.company_id) {\n        userData.company_id = null;\n      }\n      \n      if (editingUser) {\n        // Don't send password if it's empty (keep existing password)\n        if (!userData.password) {\n          delete userData.password;\n        }\n        await usersAPI.update(editingUser.id, userData);\n      } else {\n        await usersAPI.create(userData);\n      }\n      setShowUserModal(false);\n      await loadData();\n    } catch (error) {\n      console.error('Error saving user:', error);\n      setError('Błąd podczas zapisywania użytkownika');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div className=\"text-xl\">Ładowanie...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-800\">Panel Właściciela</h1>\n              <div className=\"text-sm text-gray-600\">\n                <p>Witaj, {user.username}</p>\n                <p>\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                    👑 System Owner\n                  </span>\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onLogout}\n              className=\"text-sm text-red-600 hover:text-red-800 font-medium\"\n            >\n              Wyloguj\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            {error}\n          </div>\n        </div>\n      )}\n\n      {/* Stats Cards */}\n      <div className=\"max-w-7xl mx-auto px-4 py-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"text-3xl\">🏢</div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Firmy</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalCompanies}</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"text-3xl\">👥</div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Pracownicy</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalEmployees}</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"text-3xl\">🔑</div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Użytkownicy</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalUsers}</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"text-3xl\">⏰</div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Wpisy czasu</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalTimeEntries}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"bg-white border-b rounded-t-lg\">\n          <div className=\"px-6\">\n            <nav className=\"flex space-x-8\">\n              <button\n                onClick={() => setActiveTab('companies')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'companies'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Firmy\n              </button>\n              <button\n                onClick={() => setActiveTab('users')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'users'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Użytkownicy\n              </button>\n            </nav>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"bg-white rounded-b-lg shadow\">\n          {activeTab === 'companies' && (\n            <div>\n              <div className=\"px-6 py-4 border-b flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold text-gray-800\">Lista firm</h2>\n                <button\n                  onClick={handleAddCompany}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Dodaj firmę\n                </button>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Nazwa firmy\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Data utworzenia\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Akcje\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {companies.map((company) => (\n                      <tr key={company.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {company.name}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(company.created_at).toLocaleDateString('pl-PL')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button \n                            onClick={() => handleEditCompany(company)}\n                            className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                          >\n                            Edytuj\n                          </button>\n                          <button \n                            onClick={() => handleDeleteCompany(company.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Usuń\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'users' && (\n            <div>\n              <div className=\"px-6 py-4 border-b flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold text-gray-800\">Lista użytkowników</h2>\n                <button\n                  onClick={handleAddUser}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Dodaj użytkownika\n                </button>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Użytkownik\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Rola\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Firma\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Akcje\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {users.map((user) => (\n                      <tr key={user.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {user.username}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            user.role === 'owner' ? 'bg-purple-100 text-purple-800' :\n                            user.role === 'admin' ? 'bg-blue-100 text-blue-800' :\n                            'bg-green-100 text-green-800'\n                          }`}>\n                            {user.role === 'owner' ? 'Właściciel' : \n                             user.role === 'admin' ? 'Administrator' : 'Użytkownik'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {user.company_name || 'Brak'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button \n                            onClick={() => handleEditUser(user)}\n                            className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                          >\n                            Edytuj\n                          </button>\n                          <button \n                            onClick={() => handleDeleteUser(user.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Usuń\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Company Modal */}\n      {showCompanyModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingCompany ? 'Edytuj firmę' : 'Dodaj firmę'}\n              </h3>\n              <form onSubmit={handleCompanySubmit}>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nazwa firmy\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={companyForm.name}\n                    onChange={(e) => setCompanyForm({ ...companyForm, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowCompanyModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\n                  >\n                    Anuluj\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                  >\n                    {editingCompany ? 'Zaktualizuj' : 'Dodaj'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* User Modal */}\n      {showUserModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                {editingUser ? 'Edytuj użytkownika' : 'Dodaj użytkownika'}\n              </h3>\n              <form onSubmit={handleUserSubmit}>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nazwa użytkownika\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={userForm.username}\n                    onChange={(e) => setUserForm({ ...userForm, username: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Hasło {editingUser && '(pozostaw puste, aby nie zmieniać)'}\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={userForm.password}\n                    onChange={(e) => setUserForm({ ...userForm, password: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required={!editingUser}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Typ użytkownika\n                  </label>\n                  <select\n                    value={userForm.type}\n                    onChange={(e) => setUserForm({ ...userForm, type: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"owner\">Właściciel</option>\n                    <option value=\"admin\">Administrator</option>\n                    <option value=\"user\">Użytkownik</option>\n                  </select>\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Firma\n                  </label>\n                  <select\n                    value={userForm.company_id}\n                    onChange={(e) => setUserForm({ ...userForm, company_id: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">Brak (tylko dla właściciela)</option>\n                    {companies.map(company => (\n                      <option key={company.id} value={company.id}>{company.name}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowUserModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\n                  >\n                    Anuluj\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                  >\n                    {editingUser ? 'Zaktualizuj' : 'Dodaj'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default OwnerDashboard;","import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport UserDashboard from './UserDashboard';\nimport AdminDashboard from './AdminDashboard';\nimport OwnerDashboard from './OwnerDashboard';\nimport { mockData } from '../utils/mockData';\n\nconst PanelApp = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        // For now, use mock data\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        } else {\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  };\n\n  const handleLogin = (userData, token) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div className=\"text-xl\">Ładowanie...</div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <LoginPage onLogin={handleLogin} />;\n  }\n\n  // Route based on user type\n  if (user.type === 'owner') {\n    return <OwnerDashboard user={user} onLogout={handleLogout} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {user.role === 'admin' ? (\n        <AdminDashboard user={user} onLogout={handleLogout} />\n      ) : (\n        <UserDashboard user={user} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\nexport default PanelApp;"],"names":["API_BASE_URL","process","api","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","window","location","pathname","includes","removeItem","href","authAPI","async","username","password","post","data","apiCache","Map","getCachedData","key","cached","get","Date","now","timestamp","setCachedData","set","companiesAPI","cacheKey","company","delete","id","put","usersAPI","user","employeesAPI","employee","employeeName","console","log","responseType","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","safeName","replace","download","style","display","body","appendChild","click","removeChild","revokeObjectURL","timeEntriesAPI","timeEntry","employeeSummaryAPI","month","year","params","URLSearchParams","append","employeeId","yearMonth","qrScanAPI","qrCode","userId","qr_code","user_id","_ref","onLogin","setUsername","useState","setPassword","loading","setLoading","setError","_jsxs","className","children","_jsx","onClick","fill","viewBox","fillRule","d","clipRule","onSubmit","e","preventDefault","result","access_token","htmlFor","value","onChange","target","required","disabled","onScan","isScanning","setIsScanning","facingMode","setFacingMode","isProcessing","setIsProcessing","cooldownTimer","setCooldownTimer","lastScannedCode","setLastScannedCode","lastScanTime","setLastScanTime","autoStartEnabled","setAutoStartEnabled","videoRef","useRef","qrScannerRef","cooldownIntervalRef","isProcessingRef","lastScannedCodeRef","useEffect","startScanning","stopScanning","current","clearInterval","destroy","qrScanner","QrScanner","currentTime","stop","setInterval","prev","setTimeout","onDecodeError","err","preferredCamera","highlightScanRegion","highlightCodeOutline","returnDetailedScanResult","maxScansPerSecond","start","ref","handleStartStop","newFacingMode","setCamera","title","onLogout","scanResult","setScanResult","companyInfo","setCompanyInfo","fetchCompanyInfo","company_id","company_name","name","QRScanner","qrData","success","action","employee_name","time","message","cooldown_seconds","isUnauthorized","isCooldown","clearResult","activeTab","setActiveTab","employees","setEmployees","timeReports","setTimeReports","employeeSummary","setEmployeeSummary","selectedSummaryEmployee","setSelectedSummaryEmployee","employeeMonths","setEmployeeMonths","selectedMonth","setSelectedMonth","employeeDays","setEmployeeDays","summaryView","setSummaryView","showQRModal","setShowQRModal","selectedEmployee","setSelectedEmployee","qrCodeData","setQRCodeData","showEmployeeModal","setShowEmployeeModal","editingEmployee","setEditingEmployee","employeeForm","setEmployeeForm","is_active","showTimeEntryModal","setShowTimeEntryModal","editingTimeEntry","setEditingTimeEntry","timeEntryForm","setTimeEntryForm","employee_id","check_in","check_out","loadData","employeesData","timeEntriesData","all","getEmployeeName","find","summaryData","loadEmployeeSummary","handleAddEmployee","map","handleEditEmployee","generateQRCode","downloadQRPDF","confirm","handleDeleteEmployee","handleAddTimeEntry","report","date","toLocaleDateString","toLocaleTimeString","hour","minute","total_hours","handleEditTimeEntry","toISOString","slice","timeEntryId","handleDeleteTimeEntry","toFixed","monthsData","handleEmployeeClick","length","handleBackToSummary","days_worked","daysData","handleMonthClick","handleBackToMonths","day","weekday","src","qr_code_image","alt","qr_code_data","entryData","_objectSpread","employeeData","companies","setCompanies","users","setUsers","stats","setStats","showCompanyModal","setShowCompanyModal","editingCompany","setEditingCompany","companyForm","setCompanyForm","showUserModal","setShowUserModal","editingUser","setEditingUser","userForm","setUserForm","companiesData","usersData","totalCompanies","totalUsers","totalEmployees","totalTimeEntries","handleAddCompany","created_at","handleEditCompany","companyId","handleDeleteCompany","handleAddUser","role","handleEditUser","handleDeleteUser","userData","PanelApp","setUser","checkAuthStatus","storedUser","JSON","parse","handleLogin","setItem","stringify","handleLogout","OwnerDashboard","AdminDashboard","UserDashboard","LoginPage"],"sourceRoot":""}